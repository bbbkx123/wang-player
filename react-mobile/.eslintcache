[{"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\index.tsx":"1","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\App.tsx":"2","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\layouts\\index.tsx":"3","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\index.ts":"4","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\recommend\\index.tsx":"5","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\PlayPage\\index.tsx":"6","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\utils\\hook.ts":"7","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\index.tsx":"8","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\Player\\index.tsx":"9","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\ProgressBar\\index.tsx":"10","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\http.ts":"11","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\utils\\tools.ts":"12","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\config.ts":"13","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\actions.ts":"14","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Recommend\\index.tsx":"15","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\PlayListDetails\\index.tsx":"16","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\Slider\\index.tsx":"17"},{"size":270,"mtime":1618542653660,"results":"18","hashOfConfig":"19"},{"size":259,"mtime":1618542653598,"results":"20","hashOfConfig":"19"},{"size":1558,"mtime":1619167028011,"results":"21","hashOfConfig":"19"},{"size":2175,"mtime":1618556934152,"results":"22","hashOfConfig":"19"},{"size":455,"mtime":1615165785179,"results":"23","hashOfConfig":"19"},{"size":5016,"mtime":1619167898951,"results":"24","hashOfConfig":"19"},{"size":990,"mtime":1615165785175,"results":"25","hashOfConfig":"19"},{"size":946,"mtime":1618557705410,"results":"26","hashOfConfig":"19"},{"size":3248,"mtime":1619168056372,"results":"27","hashOfConfig":"19"},{"size":4563,"mtime":1618555327296,"results":"28","hashOfConfig":"19"},{"size":864,"mtime":1615165785173,"results":"29","hashOfConfig":"19"},{"size":2156,"mtime":1618989432563,"results":"30","hashOfConfig":"19"},{"size":127,"mtime":1615165785173,"results":"31","hashOfConfig":"19"},{"size":462,"mtime":1619164669099,"results":"32","hashOfConfig":"19"},{"size":2873,"mtime":1618993229292,"results":"33","hashOfConfig":"19"},{"size":4967,"mtime":1619164517326,"results":"34","hashOfConfig":"19"},{"size":2810,"mtime":1619163963007,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"4mpgx7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\index.tsx",[],["79","80"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\App.tsx",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\layouts\\index.tsx",["81","82","83","84"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\index.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\recommend\\index.tsx",["85","86","87","88","89"],"import {useState} from 'react'\r\n// import {Route} from 'react-router-dom'\r\nimport {TabBar} from 'antd-mobile'\r\n\r\nconst Route1 = () => {\r\n  return (\r\n    <div>Route1</div>\r\n  )\r\n}\r\n\r\nconst Route2 = () => {\r\n  return (\r\n    <div>Route2</div>\r\n  )\r\n}\r\n\r\nconst TAB = ['FIRST', 'SECOND']\r\n\r\nconst Recommend = () => {\r\n  const [selectedTab, setSelectedTab] = useState<String>(TAB[0])\r\n  return (\r\n    <div>\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recommend",["90","91"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\PlayPage\\index.tsx",["92","93","94","95"],"import { useState, useEffect, useContext, useRef } from \"react\";\r\n\r\nimport ProgressBar from \"@/components/ProgressBar\";\r\nimport { StoreContext } from \"@/store\";\r\nimport { songPlayAction } from \"@/store/actions\";\r\n\r\n\r\nimport {\r\n  formatForPlayTime,\r\n} from \"@/utils/tools\";\r\nimport { useWatch } from \"@/utils/hook\";\r\n\r\nimport Player from \"@/components/Player\";\r\n\r\nimport \"./index.less\";\r\n\r\nconst PlayPage = () => {\r\n  const audioRef = useRef<any>(null);\r\n  const playRef = useRef<any>(null);\r\n  const { dispatch, EventEmitter } = useContext<any>(StoreContext);\r\n  const {\r\n    currentSongIndex,\r\n    playListDetail,\r\n    duration,\r\n    volume,\r\n    audioSrc,\r\n  } = useContext<any>(StoreContext);\r\n  const [percent, setPercent] = useState<number>(0);\r\n  const [currentTime, setCurrentTime] = useState<number>(0);\r\n  const [progressWidth, setProgressWidth] = useState<number>(0);\r\n  // const [loop, setLoop] = useState<boolean>(false)\r\n  const eventsName = EventEmitter.eventNames();\r\n\r\n  \r\n\r\n  // progress事件订阅\r\n  useEffect(() => {\r\n    if (!eventsName.includes(\"progress-changing\")) {\r\n      EventEmitter.addListener(\r\n        \"progress-changing\",\r\n        (percent: number) => {\r\n          setPercent(percent);\r\n        },\r\n        { passive: false }\r\n      );\r\n    }\r\n    return () => {\r\n      EventEmitter.removeAllListeners([\"progress-changing\"]);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    EventEmitter.addListener(\r\n      \"progress-change\",\r\n      (percent: number) => {\r\n        setPercent(percent);\r\n        audioRef.current.currentTime = duration * percent;\r\n      },\r\n      { passive: false }\r\n    );\r\n\r\n    return () => {\r\n      EventEmitter.removeAllListeners([\"progress-change\"]);\r\n    };\r\n  }, [duration]);\r\n\r\n  /**\r\n   * 问题: 在useEffect(()=>{}, [])中, timeupdate回调中无法读取 currentTime 和 duration, 暂时使用useEffect来更新percent\r\n   * 解决: 独立使用useEffect, useEffect(()=>{}, [currentTime, duration])可以获取到\r\n   */\r\n  useEffect(() => {\r\n    EventEmitter.addListener(\"timeupdate\", (payload: any) => {\r\n      const { currentTime } = payload;\r\n      setCurrentTime(currentTime);\r\n      setPercent(currentTime / duration);\r\n      // console.log(duration, currentTime);\r\n    });\r\n\r\n    return () => {\r\n      EventEmitter.removeAllListeners([\"timeupdate\"]);\r\n    };\r\n  }, [duration]);\r\n\r\n  useEffect(() => {\r\n    if (playRef.current && playRef.current.clientWidth) {\r\n      setProgressWidth(playRef.current.clientWidth - 70);\r\n    }\r\n  }, []);\r\n\r\n  useWatch(playListDetail, (prev) => {\r\n    if (prev && prev.detailId === playListDetail.detailId) return;\r\n    const initIndex = 0;\r\n    handlePlay(initIndex);\r\n  });\r\n\r\n  // 初始audio实例\r\n  // 1. 通过audio.current.src直接设置无效, 在标签中设置src可以生效 src={xxx}\r\n  // 2. chrome66以及更高的版本不允许媒体自动播放, 76前可以通过设置  chrome://flags/#autoplay-policy 设置 autoplay-policy 为  “No user gesture is required”\r\n  //  77需要通过查看网站信息 设置允许声音\r\n\r\n  const togglePlay = () => {\r\n    audioRef.current.paused\r\n      ? audioRef.current.play()\r\n      : audioRef.current.pause();\r\n  };\r\n\r\n  const handleNextSong = () => {\r\n    if (!audioRef.current || !audioRef.current.src) return;\r\n    handlePlay(\r\n      playListDetail.listData.lentgh <= currentSongIndex\r\n        ? 0\r\n        : currentSongIndex + 1\r\n    );\r\n  };\r\n\r\n  const handlePrevSong = () => {\r\n    if (!audioRef.current || !audioRef.current.src) return;\r\n    handlePlay(\r\n      currentSongIndex === 0\r\n        ? playListDetail.listData.length - 1\r\n        : currentSongIndex - 1\r\n    );\r\n  };\r\n\r\n  const handlePlay = (songIndex: number) => {\r\n    dispatch(songPlayAction(songIndex));\r\n  };\r\n\r\n  const togglePlayStatusClass = () => {\r\n    return audioRef.current && audioRef.current.paused ? 'iconstart' : 'iconpause-circle'\r\n  }\r\n\r\n  return (\r\n    <div ref={playRef} className=\"play\">\r\n      <div className=\"play--poster\">play</div>\r\n      <div className=\"play--progress\">\r\n        <span className=\"time left\">{formatForPlayTime(currentTime)}</span>\r\n        <ProgressBar\r\n          percent={percent}\r\n          progressWidth={progressWidth}\r\n        ></ProgressBar>\r\n        <span className=\"time right\">{formatForPlayTime(duration)}</span>\r\n      </div>\r\n      <div className=\"play--control\">\r\n        <div\r\n          style={{ fontSize: \"32px\" }}\r\n          className=\"iconfont iconprev\"\r\n          onClick={handlePrevSong}\r\n        ></div>\r\n        <div\r\n          style={{ fontSize: \"48px\" }}\r\n          className={`iconfont ${togglePlayStatusClass()}`}\r\n          onClick={togglePlay}\r\n        ></div>\r\n        <div\r\n          style={{ fontSize: \"32px\" }}\r\n          className=\"iconfont iconnext\"\r\n          onClick={handleNextSong}\r\n        ></div>\r\n      </div>\r\n      <Player ref={audioRef} songUrl={audioSrc}></Player>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayPage;\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\utils\\hook.ts",["96"],"import {useEffect, useRef} from 'react'\r\n\r\ntype CallBack<T> = (prev: T | undefined) => void;\r\ntype Config = { immediate: boolean };\r\n\r\n/**\r\n * useWatch\r\n * @param dep 监听对象\r\n * @param callback\r\n * @param config 监听设置\r\n */\r\n\r\nfunction useWatch<T>(\r\n  dep: T,\r\n  callback: CallBack<T>,\r\n  config: Config = { immediate: false },\r\n) {\r\n  // 监听禁止标志\r\n  const stop = useRef<boolean>(false);\r\n  // 初始化标志\r\n  const inited = useRef<boolean>(false);\r\n  const prev = useRef<T>();\r\n  const { immediate } = config;\r\n\r\n  useEffect(() => {\r\n    if (!stop.current) {\r\n      const execute = () => callback(prev.current);\r\n      // 防止immediate为false时, 首次加载就执行\r\n      if (!inited.current) {\r\n        inited.current = true;\r\n        if (immediate) {\r\n          execute();\r\n        }\r\n      } else {\r\n        execute();\r\n      }\r\n      prev.current = dep;\r\n    }\r\n  }, [dep]);\r\n\r\n  return () => {\r\n    stop.current = true;\r\n  };\r\n}\r\n\r\nexport { useWatch };","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\index.tsx",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\Player\\index.tsx",["97","98","99","100"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\ProgressBar\\index.tsx",["101"],"import { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { StoreContext } from \"@/store\";\r\nimport { throttle } from \"@/utils/tools\";\r\nimport \"./index.less\";\r\n\r\n// 进度条按钮宽度\r\nconst progressBarWidth = 16;\r\n// mousedown到mopuseup间隔时间, 用于区分click和mouseup, 超过150ms为mouse事件, 否则为click事件\r\nconst refelctTime = 0.1;\r\n\r\n// ! 问题: 全面屏手势滑动会进行翻页, 导致touchmove不能正确调用\r\n// ? 测试发现小米手机浏览器存在原生滑动事件, 导致问题, 在微信中可正常使用\r\n\r\nconst ProgressBar = (props: any) => {\r\n  const { percent, progressWidth } = props;\r\n  const progressBar = useRef<any>(null),\r\n    progress = useRef<any>(null),\r\n    progressBtn = useRef<any>(null);\r\n  const { startTime, dispatch, EventEmitter } = useContext<any>(StoreContext);\r\n  const [touch, setTouch] = useState({\r\n    initiated: false,\r\n    startX: 0,\r\n  });\r\n  const [progressClientWidth, setProgressClientWidth] = useState<number>(0);\r\n  const [barWidth, setBarWidth] = useState<number | null>(null);\r\n\r\n  const progressClick = (e: any) => {\r\n    // 解决mouseup和click重发触发的问题\r\n    let diff = (new Date().getTime() - startTime) / 1000;\r\n    if (diff > refelctTime) return;\r\n    // .getBoundingClientRect()\r\n    const rect = progressBar.current.getBoundingClientRect();\r\n    const offsetWidth = e.touches[0].clientX - rect.left;\r\n    handleOffset(offsetWidth);\r\n    EventEmitter.emit(\"progress-change\", getPrecent());\r\n  };\r\n\r\n  const handleOffset = (offsetWidth: any) => {\r\n    progress.current.style.width = `${offsetWidth}px`;\r\n    progressBtn.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`;\r\n  };\r\n\r\n  const progressTouchMove = (e: any) => {\r\n    // ?   Math.max(0, this.progressClientWidth + deltaX) -->  0  移动超出左边界\r\n    // ?   Math.max(0, this.progressClientWidth + deltaX) -->  delta  正常移动\r\n    // ?\r\n    // ?   this.barWidth 实际进度条宽度\r\n    // ?   b = Math.max(0, this.progressClientWidth + deltaX)\r\n    // ?   Math.min(a, b)  -->  a 超出右边界\r\n    // ?   Math.min(a, b)  -->  b 正常移动\r\n\r\n    if (!touch.initiated) return;\r\n    const deltaX = e.touches[0].clientX - touch.startX;\r\n    const offsetWidth = Math.min(\r\n      barWidth === null ? 0 : barWidth,\r\n      Math.max(0, progressClientWidth + deltaX)\r\n    );\r\n    handleOffset(offsetWidth);\r\n    EventEmitter.emit(\"progress-changing\", getPrecent());\r\n  };\r\n\r\n  const progressTouchStart = (e: any) => {\r\n    setTouch({\r\n      initiated: true,\r\n      startX: e.touches[0].clientX,\r\n    });\r\n    setProgressClientWidth(progress.current.clientWidth);\r\n    dispatch({ type: \"startTime\", value: new Date().getTime() });\r\n  };\r\n\r\n  // 不进行节流会造成拖动卡顿\r\n  const _progressTouchMove = (e: any) => {\r\n    throttle(progressTouchMove, 200, 0)([e]);\r\n  };\r\n\r\n  const progressTouchEnd = () => {\r\n    // 出现问题: 从$refs获取样式数据会取到更新之前的数据\r\n    // 在move事件上启用节流后, 可以避免使用定时器\r\n    // 先抛出事件, 再将initiated修改为false\r\n    EventEmitter.emit(\"progress-change\", getPrecent());\r\n    setTouch({\r\n      ...touch,\r\n      initiated: false,\r\n    });\r\n  };\r\n\r\n  const getPrecent = () => {\r\n    let num = progress.current.clientWidth / (barWidth === null ? 0 : barWidth)\r\n    return num.toFixed(4);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (progressBar.current) {\r\n        setBarWidth(progressBar.current.clientWidth - progressBarWidth);\r\n      }\r\n    }, 0)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // timeupdate事件触发\r\n    if (percent > 0 && !touch.initiated && barWidth !== null) {\r\n      const offsetWidth = percent * barWidth\r\n      handleOffset(offsetWidth);\r\n    }\r\n  }, [percent]);\r\n\r\n  return (\r\n    <div\r\n      className=\"progress-bar__container\"\r\n      ref={progressBar}\r\n      onClick={progressClick}\r\n      style={{width: `${progressWidth}px`}}\r\n    >\r\n      <div\r\n        className=\"progress-bar\"\r\n        onTouchStart={progressTouchStart}\r\n        onTouchMove={_progressTouchMove}\r\n        onTouchEnd={progressTouchEnd}\r\n      >\r\n        <div className=\"progress-bar__background\"></div>\r\n        {/* 进度条 */}\r\n        <div className=\"progress-bar--progress\" ref={progress}></div>\r\n        {/* 当前进度按钮 */}\r\n        <div className=\"progress-bar--btn__wrapper\" ref={progressBtn}>\r\n          <div className=\"progress-bar--btn\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\http.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\utils\\tools.ts",["102","103","104"],"import {useEffect, useRef} from 'react'\r\n\r\n/**\r\n * 节流\r\n * @param {Function} fn 目标函数 \r\n * @param {Number} wait 间隔时间\r\n * @param {Number} type 模式  0 ---> timestamp , 1 ---> timeout\r\n */\r\nexport function throttle (fn: any, wait: any, type: any) {\r\n  const context = this\r\n  return function (_arguments: any[]) {\r\n    if (type === 0) {\r\n      let newTimestamp = new Date().getTime()\r\n      if (!fn._timestamp) fn._timestamp = 0\r\n      if (newTimestamp - fn._timestamp > wait) {\r\n        fn.call(context, ..._arguments)\r\n        fn._timestamp = newTimestamp\r\n      }\r\n    } else {\r\n      if (!fn._timeout) {\r\n        fn._timeout = setTimeout(() => {\r\n          fn.call(context, ..._arguments)\r\n          fn._timeout = null\r\n          clearTimeout(fn._timeout)\r\n        }, wait)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 时间格式化\r\nexport const formatForPlayTime = (time: any) => {\r\n  if (time === null || typeof time === 'undefined') return\r\n  if (time === 0) return '00:00'\r\n  let _time = parseFloat(time)\r\n  if (typeof _time !== 'number') return \r\n  let _format = (_time: any) => _time >= 10 ? _time : `0${_time}`\r\n  return _format(Math.floor(_time / 60)) + ':' + _format((_time % 60).toFixed(0))\r\n}\r\n\r\n\r\nexport const formatForPlayListDetail = (data: any) => {\r\n  const { coverImgUrl, name, trackIds, tracks } = data.data.playlist;\r\n  const { avatarUrl, nickname } = data.data.playlist.creator;\r\n  const listData = trackIds.map((item: any) => item.id);\r\n  return {\r\n    avatarUrl,\r\n    nickname,\r\n    name,\r\n    coverImgUrl,\r\n    listData,\r\n  };\r\n}\r\n\r\nexport const formatForSong = (song: any, songId: any) => {\r\n  return {\r\n    name: song.name,\r\n    artist: song.ar,\r\n    album: song.al,\r\n    sid: songId,\r\n  };\r\n}\r\n\r\n// export const getSlot = (slots: any, slot?: any, data?: any) => {\r\n//   if (slot === undefined) slot = 'default'\r\n//   if (!slots || !Reflect.has(slots, slot)) {\r\n//     return null;\r\n//   }\r\n\r\n//   if (typeof slots[slot] !== 'function') {\r\n//     console.error(`${slot} is not a function!`);\r\n//     return null;\r\n//   }\r\n//   const slotFn = slots[slot];\r\n//   if (!slotFn) return null;\r\n//   return slotFn(data);\r\n// }\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\config.ts",["105"],"export default {\r\n  baseUrl: process.env.NODE_ENV === \"development\" ? \"http://localhost:3000\" : \"http://106.13.207.132:3000\"\r\n}","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\actions.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Recommend\\index.tsx",["106","107","108","109"],"import { useState, useEffect } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport Slider from \"@/components/Slider\"\r\n\r\nimport * as api from \"@/service\"\r\n\r\nconst Recommend = (props: any) => {\r\n  const { history } = props\r\n  const [bannerArr, setBannerArr] = useState([])\r\n  const [bannerActions, setBannerActions] = useState<any[]>([])\r\n  const [currentIndexOfBanner, setCurrentIndexOfBanner] = useState<number>(0)\r\n  const [sliderConf, setSliderConf] = useState<any>({\r\n    scrollX: true,\r\n    scrollY: false,\r\n    momentum: false,\r\n    slide: {\r\n      // loop: this.loop,\r\n      threshold: 0.3,\r\n    },\r\n  })\r\n  const fun1 = () => {\r\n    history.push(\"/playlistdetails\")\r\n  }\r\n\r\n  const getBanner = () => {\r\n    let type = 0\r\n    api.getBanner(type).then((res) => {\r\n      if (res.data.code === 200) {\r\n        setBannerArr(res.data.banners)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleBannerInit = (bannerArr: any[]) => {\r\n    return bannerArr.map(() => {\r\n      return { prev: false, current: false, next: false }\r\n    })\r\n  }\r\n\r\n  const handleBannerAutoScroll = () => {\r\n    // if (!this.timer) {\r\n    //   // console.log(this.timer)\r\n    //   this.timer = setInterval(() => {\r\n    //     this.handleBannerScrollForNextBtn()\r\n    //     // console.log('auto')\r\n    //   }, 5000)\r\n    // }\r\n  }\r\n\r\n  const handleBannerActive = (index: number) => {\r\n    const _bannerActions = handleBannerInit(bannerArr)\r\n    if (!_bannerActions) return console.log(\"bannerActions is null\")\r\n    if (index === 0) {\r\n      _bannerActions[_bannerActions.length - 1].prev = true\r\n      _bannerActions[0].current = true\r\n      _bannerActions[1].next = true\r\n    } else if (index === _bannerActions.length - 1) {\r\n      _bannerActions[_bannerActions.length - 2].prev = true\r\n      _bannerActions[_bannerActions.length - 1].current = true\r\n      _bannerActions[0].next = true\r\n    } else {\r\n      _bannerActions[index - 1].prev = true\r\n      _bannerActions[index].current = true\r\n      _bannerActions[index + 1].next = true\r\n    }\r\n    setBannerActions(_bannerActions)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBanner()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ??? 长度小于3 需要处理\r\n    if (bannerArr.length > 2) {\r\n      setCurrentIndexOfBanner(0)\r\n      handleBannerActive(currentIndexOfBanner)\r\n      handleBannerAutoScroll()\r\n    }\r\n  }, [bannerArr])\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={fun1}>click</button>\r\n      <div className=\"banner-container\">\r\n        <Slider mode=\"Slide\" sliderConf={sliderConf}>\r\n          {bannerActions.length > 0 &&\r\n            bannerArr.map((banner: any, index: number) => {\r\n              if (banner) {\r\n                return <img src={`${banner.imageUrl}?param=375y140`} key={`banner-${index}`} />\r\n              }\r\n            })}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Recommend)\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\PlayListDetails\\index.tsx",["110","111"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\Slider\\index.tsx",["112","113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":20,"nodeType":"120","messageId":"121","endLine":1,"endColumn":29},{"ruleId":"118","severity":1,"message":"122","line":1,"column":31,"nodeType":"120","messageId":"121","endLine":1,"endColumn":37},{"ruleId":"118","severity":1,"message":"123","line":2,"column":22,"nodeType":"120","messageId":"121","endLine":2,"endColumn":30},{"ruleId":"118","severity":1,"message":"124","line":19,"column":21,"nodeType":"120","messageId":"121","endLine":19,"endColumn":33},{"ruleId":"118","severity":1,"message":"125","line":3,"column":9,"nodeType":"120","messageId":"121","endLine":3,"endColumn":15},{"ruleId":"118","severity":1,"message":"126","line":5,"column":7,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"118","severity":1,"message":"127","line":11,"column":7,"nodeType":"120","messageId":"121","endLine":11,"endColumn":13},{"ruleId":"118","severity":1,"message":"128","line":20,"column":10,"nodeType":"120","messageId":"121","endLine":20,"endColumn":21},{"ruleId":"118","severity":1,"message":"129","line":20,"column":23,"nodeType":"120","messageId":"121","endLine":20,"endColumn":37},{"ruleId":"114","replacedBy":"130"},{"ruleId":"116","replacedBy":"131"},{"ruleId":"118","severity":1,"message":"132","line":25,"column":5,"nodeType":"120","messageId":"121","endLine":25,"endColumn":11},{"ruleId":"133","severity":1,"message":"134","line":50,"column":6,"nodeType":"135","endLine":50,"endColumn":8,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":65,"column":6,"nodeType":"135","endLine":65,"endColumn":16,"suggestions":"138"},{"ruleId":"133","severity":1,"message":"137","line":82,"column":6,"nodeType":"135","endLine":82,"endColumn":16,"suggestions":"139"},{"ruleId":"133","severity":1,"message":"140","line":39,"column":6,"nodeType":"135","endLine":39,"endColumn":11,"suggestions":"141"},{"ruleId":"118","severity":1,"message":"142","line":1,"column":50,"nodeType":"120","messageId":"121","endLine":1,"endColumn":60},{"ruleId":"118","severity":1,"message":"143","line":11,"column":32,"nodeType":"120","messageId":"121","endLine":11,"endColumn":40},{"ruleId":"118","severity":1,"message":"144","line":18,"column":16,"nodeType":"120","messageId":"121","endLine":18,"endColumn":23},{"ruleId":"118","severity":1,"message":"145","line":20,"column":16,"nodeType":"120","messageId":"121","endLine":20,"endColumn":23},{"ruleId":"133","severity":1,"message":"146","line":107,"column":6,"nodeType":"135","endLine":107,"endColumn":15,"suggestions":"147"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":18},{"ruleId":"118","severity":1,"message":"122","line":1,"column":20,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"148","line":43,"column":40,"nodeType":"120","messageId":"121","endLine":43,"endColumn":46},{"ruleId":"149","severity":1,"message":"150","line":1,"column":1,"nodeType":"151","endLine":3,"endColumn":2},{"ruleId":"118","severity":1,"message":"152","line":12,"column":22,"nodeType":"120","messageId":"121","endLine":12,"endColumn":35},{"ruleId":"133","severity":1,"message":"153","line":80,"column":6,"nodeType":"135","endLine":80,"endColumn":17,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":88,"column":56,"nodeType":"157","messageId":"158","endLine":88,"endColumn":58},{"ruleId":"159","severity":1,"message":"160","line":90,"column":24,"nodeType":"161","endLine":90,"endColumn":96},{"ruleId":"133","severity":1,"message":"162","line":89,"column":6,"nodeType":"135","endLine":89,"endColumn":8,"suggestions":"163"},{"ruleId":"133","severity":1,"message":"164","line":100,"column":6,"nodeType":"135","endLine":100,"endColumn":8,"suggestions":"165"},{"ruleId":"118","severity":1,"message":"166","line":9,"column":25,"nodeType":"120","messageId":"121","endLine":9,"endColumn":33},{"ruleId":"133","severity":1,"message":"167","line":61,"column":6,"nodeType":"135","endLine":61,"endColumn":16,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Redirect' is defined but never used.","'setPageTitle' is assigned a value but never used.","'TabBar' is defined but never used.","'Route1' is assigned a value but never used.","'Route2' is assigned a value but never used.","'selectedTab' is assigned a value but never used.","'setSelectedTab' is assigned a value but never used.",["169"],["170"],"'volume' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'EventEmitter' and 'eventsName'. Either include them or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has a missing dependency: 'EventEmitter'. Either include it or remove the dependency array.",["172"],["173"],"React Hook useEffect has missing dependencies: 'callback' and 'immediate'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["174"],"'forwardRef' is defined but never used.","'duration' is assigned a value but never used.","'setLoop' is assigned a value but never used.","'setPlay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'barWidth' and 'touch.initiated'. Either include them or remove the dependency array.",["175"],"'tracks' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setSliderConf' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentIndexOfBanner' and 'handleBannerActive'. Either include them or remove the dependency array.",["176"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'BSInstance' and 'init'. Either include them or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'getPlayListDetail'. Either include it or remove the dependency array.",["178"],"'dispacth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'SliderInstance', 'initial', and 'setSliderWidth'. Either include them or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [EventEmitter, eventsName]",{"range":"197","text":"198"},"Update the dependencies array to be: [EventEmitter, duration]",{"range":"199","text":"200"},{"range":"201","text":"200"},"Update the dependencies array to be: [callback, dep, immediate]",{"range":"202","text":"203"},"Update the dependencies array to be: [barWidth, percent, touch.initiated]",{"range":"204","text":"205"},"Update the dependencies array to be: [bannerArr, currentIndexOfBanner, handleBannerActive]",{"range":"206","text":"207"},"Update the dependencies array to be: [BSInstance, init]",{"range":"208","text":"209"},"Update the dependencies array to be: [getPlayListDetail]",{"range":"210","text":"211"},"Update the dependencies array to be: [SliderInstance, children, initial, setSliderWidth]",{"range":"212","text":"213"},[1365,1367],"[EventEmitter, eventsName]",[1711,1721],"[EventEmitter, duration]",[2265,2275],[844,849],"[callback, dep, immediate]",[3430,3439],"[barWidth, percent, touch.initiated]",[2322,2333],"[bannerArr, currentIndexOfBanner, handleBannerActive]",[2526,2528],"[BSInstance, init]",[2782,2784],"[getPlayListDetail]",[2133,2143],"[SliderInstance, children, initial, setSliderWidth]"]