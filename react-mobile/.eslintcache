[{"D:\\web\\wang-player\\react-mobile\\src\\index.tsx":"1","D:\\web\\wang-player\\react-mobile\\src\\App.tsx":"2","D:\\web\\wang-player\\react-mobile\\src\\store\\index.ts":"3","D:\\web\\wang-player\\react-mobile\\src\\store\\detail\\reducer.ts":"4","D:\\web\\wang-player\\react-mobile\\src\\store\\playpage\\reducer.ts":"5","D:\\web\\wang-player\\react-mobile\\src\\store\\playlist\\reducer.ts":"6","D:\\web\\wang-player\\react-mobile\\src\\store\\global\\reducer.ts":"7","D:\\web\\wang-player\\react-mobile\\src\\store\\recommend\\reducer.ts":"8","D:\\web\\wang-player\\react-mobile\\src\\store\\audio\\reducer.ts":"9","D:\\web\\wang-player\\react-mobile\\src\\views\\Layouts\\index.tsx":"10","D:\\web\\wang-player\\react-mobile\\src\\store\\types.ts":"11","D:\\web\\wang-player\\react-mobile\\src\\router\\index.ts":"12","D:\\web\\wang-player\\react-mobile\\src\\components\\Player\\index.tsx":"13","D:\\web\\wang-player\\react-mobile\\src\\components\\MiniController\\index.tsx":"14","D:\\web\\wang-player\\react-mobile\\src\\components\\MiniList\\index.tsx":"15","D:\\web\\wang-player\\react-mobile\\src\\store\\action.ts":"16","D:\\web\\wang-player\\react-mobile\\src\\views\\PlayPage\\index.tsx":"17","D:\\web\\wang-player\\react-mobile\\src\\views\\PlayListDetails\\index.tsx":"18","D:\\web\\wang-player\\react-mobile\\src\\views\\Recommend\\index.tsx":"19","D:\\web\\wang-player\\react-mobile\\src\\views\\Comment\\index.tsx":"20","D:\\web\\wang-player\\react-mobile\\src\\views\\Search\\index.tsx":"21","D:\\web\\wang-player\\react-mobile\\src\\store\\playpage\\action.ts":"22","D:\\web\\wang-player\\react-mobile\\src\\store\\audio\\action.ts":"23","D:\\web\\wang-player\\react-mobile\\src\\components\\List\\index.tsx":"24","D:\\web\\wang-player\\react-mobile\\src\\components\\Scroll\\index.tsx":"25","D:\\web\\wang-player\\react-mobile\\src\\views\\Search\\define.ts":"26","D:\\web\\wang-player\\react-mobile\\src\\views\\Recommend\\define.ts":"27","D:\\web\\wang-player\\react-mobile\\src\\views\\PlayListDetails\\define.ts":"28","D:\\web\\wang-player\\react-mobile\\src\\utils\\hook.ts":"29","D:\\web\\wang-player\\react-mobile\\src\\utils\\tools.ts":"30","D:\\web\\wang-player\\react-mobile\\src\\service\\index.tsx":"31","D:\\web\\wang-player\\react-mobile\\src\\components\\Loading\\index.tsx":"32","D:\\web\\wang-player\\react-mobile\\src\\service\\http.ts":"33","D:\\web\\wang-player\\react-mobile\\src\\components\\ProgressBar\\index.tsx":"34","D:\\web\\wang-player\\react-mobile\\src\\service\\config.ts":"35","D:\\web\\wang-player\\react-mobile\\src\\store\\testlog\\reducer.ts":"36","D:\\web\\wang-player\\react-mobile\\src\\store\\comment\\reducer.ts":"37","D:\\web\\wang-player\\react-mobile\\src\\views\\MoreDetails\\inedx.tsx":"38","D:\\web\\wang-player\\react-mobile\\src\\views\\MoreDetails\\define.ts":"39"},{"size":405,"mtime":1627282605821,"results":"40","hashOfConfig":"41"},{"size":265,"mtime":1626923301843,"results":"42","hashOfConfig":"41"},{"size":899,"mtime":1626923301890,"results":"43","hashOfConfig":"41"},{"size":1016,"mtime":1626923301887,"results":"44","hashOfConfig":"41"},{"size":1234,"mtime":1626923301894,"results":"45","hashOfConfig":"41"},{"size":510,"mtime":1626923301891,"results":"46","hashOfConfig":"41"},{"size":655,"mtime":1626923301889,"results":"47","hashOfConfig":"41"},{"size":656,"mtime":1626923301896,"results":"48","hashOfConfig":"41"},{"size":962,"mtime":1626923301884,"results":"49","hashOfConfig":"41"},{"size":2731,"mtime":1627282775252,"results":"50","hashOfConfig":"41"},{"size":1846,"mtime":1626923301899,"results":"51","hashOfConfig":"41"},{"size":1253,"mtime":1627283490762,"results":"52","hashOfConfig":"41"},{"size":2790,"mtime":1626923301867,"results":"53","hashOfConfig":"41"},{"size":2312,"mtime":1626923301862,"results":"54","hashOfConfig":"41"},{"size":1612,"mtime":1627282445674,"results":"55","hashOfConfig":"41"},{"size":314,"mtime":1626923301881,"results":"56","hashOfConfig":"41"},{"size":6932,"mtime":1626923301916,"results":"57","hashOfConfig":"41"},{"size":6029,"mtime":1627282280563,"results":"58","hashOfConfig":"41"},{"size":7838,"mtime":1627465349524,"results":"59","hashOfConfig":"41"},{"size":1858,"mtime":1626923301906,"results":"60","hashOfConfig":"41"},{"size":2611,"mtime":1626923301921,"results":"61","hashOfConfig":"41"},{"size":1633,"mtime":1626923301893,"results":"62","hashOfConfig":"41"},{"size":1943,"mtime":1626923301883,"results":"63","hashOfConfig":"41"},{"size":3617,"mtime":1626923301857,"results":"64","hashOfConfig":"41"},{"size":5269,"mtime":1626923301872,"results":"65","hashOfConfig":"41"},{"size":309,"mtime":1626923301920,"results":"66","hashOfConfig":"41"},{"size":947,"mtime":1626923301917,"results":"67","hashOfConfig":"41"},{"size":311,"mtime":1626923301911,"results":"68","hashOfConfig":"41"},{"size":2862,"mtime":1626923301902,"results":"69","hashOfConfig":"41"},{"size":3188,"mtime":1626923301903,"results":"70","hashOfConfig":"41"},{"size":3054,"mtime":1627286653743,"results":"71","hashOfConfig":"41"},{"size":1630,"mtime":1626923301860,"results":"72","hashOfConfig":"41"},{"size":915,"mtime":1627285203858,"results":"73","hashOfConfig":"41"},{"size":4343,"mtime":1626923301870,"results":"74","hashOfConfig":"41"},{"size":227,"mtime":1626923301878,"results":"75","hashOfConfig":"41"},{"size":359,"mtime":1626923301898,"results":"76","hashOfConfig":"41"},{"size":358,"mtime":1626923301885,"results":"77","hashOfConfig":"41"},{"size":2566,"mtime":1627464941901,"results":"78","hashOfConfig":"41"},{"size":702,"mtime":1627290092861,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"yn0866",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"D:\\web\\wang-player\\react-mobile\\src\\index.tsx",[],["162","163"],"D:\\web\\wang-player\\react-mobile\\src\\App.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\index.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\detail\\reducer.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\playpage\\reducer.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\playlist\\reducer.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\global\\reducer.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\recommend\\reducer.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\audio\\reducer.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\views\\Layouts\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\types.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\router\\index.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\components\\Player\\index.tsx",["164","165"],"import { useState, useEffect, useRef } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport action from \"@/store/action\"\r\n\r\nconst Player = (props: any) => {\r\n  const { history} = props\r\n\r\n  const dispatch = useDispatch()\r\n  const playList = useSelector((state: any) => state.playlist.data)\r\n  const currentSongIndex = useSelector((state: any) => state.playlist.currentSongIndex)\r\n  const showController = useSelector((state: any) => state.global.showController)\r\n  const testLog = useSelector((state: any) => state.test.log)\r\n\r\n  const audioElemRef = useRef<any>(null)\r\n  const [loop] = useState<boolean>(false)\r\n\r\n  // !问题: buffer加载时, currentTime需要loading效果\r\n  const onEnded = () => {\r\n    audioElemRef.current.pause()\r\n    dispatch({ type: \"audio/paused\", value: true })\r\n    if (playList.length > 0) {\r\n      if (currentSongIndex < playList.length - 1) {\r\n        if (!showController && window.location.pathname !== \"/play\") {\r\n          dispatch({ type: \"global/show-controller\", value: true })\r\n        }\r\n        dispatch(action.beforeCanPlayAction(currentSongIndex + 1))\r\n      } else if (currentSongIndex === playList.length - 1) {\r\n        // if (this.isLoopPlayList) {\r\n        //     this.songChangeIndex = 0\r\n        // }\r\n      }\r\n    }\r\n  }\r\n\r\n  const onTimeUpdate = (e: any) => {\r\n    let _currentTime = Math.floor(e.target.currentTime * 100) / 100\r\n    \r\n    // testLog.push(`onTimeUpdate ----- currentTime ：${_currentTime}`)\r\n    // dispatch({type: 'test/log', value: [...testLog]})\r\n\r\n    // 最初放在onCanplay，线上环境onCanplay执行audio.duration为0\r\n    dispatch({ type: \"audio/duration\", value: audioElemRef.current.duration })\r\n    dispatch({ type: \"audio/current-time\", value: _currentTime })\r\n  }\r\n\r\n  const onCanPlay = () => {\r\n    const { pathname } = history.location\r\n    dispatch({ type: \"audio/paused\", value: false })\r\n    // if (!showController && pathname !== \"/play\") dispatch({ type: \"global/show-controller\", value: true })\r\n  }\r\n\r\n  useEffect(() => {\r\n    audioElemRef.current.volume = 0.5\r\n    dispatch({ type: \"audio/instance\", value: audioElemRef.current })\r\n    return () => {}\r\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // *问题: react-hooks/exhaustive-deps\r\n  // 解决: 如果不需要在useEffect外使用方法, 可以简单的将方法移入useEffect内, 或者禁用\r\n\r\n  // *问题: 直接访问listDetail为null, 暂时将listDetail存入ref\r\n  // 在useEffect(() => {}, [])访问, listDetail是初始值null, 暂时这样实现\r\n\r\n  return <audio ref={audioElemRef} autoPlay={true} onEnded={onEnded} onTimeUpdate={onTimeUpdate} onCanPlay={onCanPlay} loop={loop}></audio>\r\n}\r\n\r\nexport default withRouter(Player)\r\n","D:\\web\\wang-player\\react-mobile\\src\\components\\MiniController\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\components\\MiniList\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\action.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\views\\PlayPage\\index.tsx",["166"],"import { useState, useEffect, useRef } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport ProgressBar from \"@/components/ProgressBar\"\r\nimport { changeSongAction } from \"@/store/audio/action\"\r\nimport { fetchLyricAction, getCurrentLineNumAction } from \"@/store/playpage/action\"\r\nimport { togglePlayAction } from \"@/store/audio/action\"\r\nimport { formatForPlayTime } from \"@/utils/tools\"\r\nimport { useReactiveSelector } from \"@/utils/hook\"\r\nimport List from \"@/components/List\"\r\nimport \"./index.less\"\r\n\r\nconst INITIAL_TOP = 200\r\nconst MOVE = -50\r\n\r\nconst PlayPage = (props: any) => {\r\n  const { history } = props\r\n  const ref = useRef<any>(null)\r\n  const cdWrapperElemRef = useRef<any>()\r\n  const lyricElemRef = useRef<any>()\r\n  const degRef = useRef<any>({\r\n    deg: null,\r\n    start: true,\r\n  })\r\n  const [showLyric, setShowLyric] = useState<boolean>(false)\r\n  const [displayCurrentTime, setDisplayCurrentTime] = useState<string>('')\r\n  const [displayDuration, setDisplayDuration] = useState<string>('')\r\n\r\n  const dispatch = useDispatch()\r\n  const playList = useSelector((state: any) => state.playlist.data)\r\n  const currentSongIndex = useSelector((state: any) => state.playlist.currentSongIndex)\r\n  const duration = useSelector((state: any) => state.audio.duration)\r\n  const lyric = useSelector((state: any) => state.playpage.lyric)\r\n  const currentLyricLine = useSelector((state: any) => state.playpage.currentLyricLine)\r\n  const songId = useSelector((state: any) => state.playpage.songId)\r\n  const percent = useSelector((state: any) => state.playpage.percent)\r\n  const paused = useSelector((state: any) => state.audio.paused)\r\n  const currentTime = useSelector((state: any) => state.audio.currentTime)\r\n  const isProgressChanging = useReactiveSelector((state: any) => state.playpage.isProgressChanging)\r\n\r\n  const testLog = useSelector((state: any) => state.test.log)\r\n\r\n  /**\r\n   * 问题: 在useEffect(()=>{}, [])中, timeupdate回调中无法读取 currentTime 和 duration, 暂时使用useEffect来更新percent\r\n   * 解决: 独立使用useEffect, useEffect(()=>{}, [currentTime, duration])可以获取到\r\n   * 后续发现不存在问题, 待观察\r\n   */\r\n\r\n  // 初始audio实例\r\n  // 1. 通过audio.current.src直接设置无效, 在标签中设置src可以生效 src={xxx}\r\n  // 2. chrome66以及更高的版本不允许媒体自动播放, 76前可以通过设置  chrome://flags/#autoplay-policy 设置 autoplay-policy 为  “No user gesture is required”\r\n  //  77需要通过查看网站信息 设置允许声音\r\n\r\n  const togglePlay = () => {\r\n    dispatch(togglePlayAction())\r\n  }\r\n\r\n  const handleNextSong = () => {\r\n    dispatch(changeSongAction(\"NEXT\"))\r\n  }\r\n\r\n  const handlePrevSong = () => {\r\n    dispatch(changeSongAction(\"PREV\"))\r\n  }\r\n\r\n  const rotate = (deg: number) => {\r\n    if (cdWrapperElemRef.current && cdWrapperElemRef.current.style) {\r\n      cdWrapperElemRef.current.style.transform = `rotate(${deg}deg)`\r\n    }\r\n  }\r\n\r\n  const image = () => {\r\n    if (playList[currentSongIndex].album.picUrl) {\r\n      return playList[currentSongIndex].album.picUrl + \"?param=300y300\"\r\n    } else {\r\n      return process.env.PUBLIC_URL + \"/image/wink.png\"\r\n    }\r\n  }\r\n\r\n  const scroll = () => {\r\n    if (lyricElemRef.current) {\r\n      lyricElemRef.current.style.top = INITIAL_TOP + currentLyricLine * MOVE + \"px\"\r\n    }\r\n  }\r\n\r\n  const toggleMainView = () => {\r\n    setShowLyric((prev) => {\r\n      degRef.current.start = prev\r\n      degRef.current.deg = 0\r\n      return !prev\r\n    })\r\n  }\r\n\r\n  const pageToComment = (e: any) => {\r\n    e.stopPropagation()\r\n    history.push({ pathname: \"/comment\" })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lyric.lyricList.length === 0) dispatch(fetchLyricAction(songId))\r\n    degRef.current.deg = 0\r\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (!isProgressChanging.current) {\r\n      const percent = Math.floor((currentTime / duration) * 10000) / 10000\r\n      // console.log(percent, currentTime, duration);\r\n      dispatch({ type: \"play-page/percent\", value: percent })\r\n    }\r\n    dispatch(getCurrentLineNumAction(currentTime))\r\n\r\n    if (degRef.current.start) {\r\n      degRef.current.deg = (degRef.current.deg || 0) + 2\r\n      if (degRef.current.deg >= 360) degRef.current.deg = 0\r\n      rotate(degRef.current.deg)\r\n    }\r\n  }, [currentTime]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (!songId || songId === ref.current) return\r\n    ref.current = songId\r\n    dispatch(fetchLyricAction(songId))\r\n  }, [songId]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => scroll(), [currentLyricLine]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (showLyric) scroll()\r\n  }, [showLyric]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setDisplayCurrentTime(formatForPlayTime(duration * percent))\r\n  }, [duration, currentTime]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setDisplayDuration(formatForPlayTime(duration))\r\n  }, [duration]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className=\"play\">\r\n      <div className=\"play--main-container\" onClick={toggleMainView}>\r\n        {!showLyric ? (\r\n          <div className=\"play--main\">\r\n            <div ref={cdWrapperElemRef} className=\"play--cd-wrapper\">\r\n              {playList[currentSongIndex] && <img src={image()} alt=\"\" />}\r\n            </div>\r\n            <div className=\"play--other-btn\" onClick={pageToComment}>\r\n              <div style={{ fontSize: \"24px\", width: \"30px\" }} className=\"iconfont iconcomment\"></div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"play--lyric\" ref={(ref) => (lyricElemRef.current = ref)}>\r\n            {lyric && lyric.lyricList.length > 0 && <List mode=\"LYRIC\" data={lyric.lyricList} current={currentLyricLine}></List>}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"edit-container\">\r\n        <div className=\"play--progress\">\r\n          <span className=\"time left\">{displayCurrentTime}</span>\r\n          <div style={{ width: \"calc(100% - 70px)\" }}>\r\n            <ProgressBar percent={percent}></ProgressBar>\r\n          </div>\r\n          <span className=\"time right\">{displayDuration}</span>\r\n        </div>\r\n        <div className=\"play--control\">\r\n          <div style={{ fontSize: \"32px\" }} className=\"iconfont iconprev\" onClick={handlePrevSong}></div>\r\n          <div style={{ fontSize: \"48px\" }} className={`iconfont ${typeof paused === \"boolean\" && !paused ? \"iconpause-circle\" : \"iconstart\"}`} onClick={togglePlay}></div>\r\n          <div style={{ fontSize: \"32px\" }} className=\"iconfont iconnext\" onClick={handleNextSong}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(PlayPage)\r\n","D:\\web\\wang-player\\react-mobile\\src\\views\\PlayListDetails\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\views\\Recommend\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\views\\Comment\\index.tsx",["167"],"import * as api from \"@/service/index\"\r\nimport { useCallback, useEffect } from \"react\"\r\nimport { useSelector, useStore, useDispatch } from \"react-redux\"\r\nimport { useAsync, useTouchEvent } from \"@/utils/hook\"\r\nimport List from \"@/components/List\"\r\nimport Scroll from \"@/components/Scroll\"\r\nimport Loading from \"@/components/Loading\"\r\n\r\nimport \"./index.less\"\r\n\r\nconst commentPageConf = {\r\n  scrollY: true,\r\n  scrollX: false,\r\n  // 锁定方向\r\n  directionLockThreshold: 0,\r\n  freeScroll: false,\r\n}\r\n\r\nconst useComment = (songId: string, state: any, dispatch: Function)  => {\r\n  const { loading, data, error, execute } = useAsync(useCallback(async () => await api.fetchMusicComment(songId, 20, 0), [songId]))\r\n\r\n  useEffect(() => execute(), [songId]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    const comments = data?.data?.comments\r\n    if (Array.isArray(comments) && comments.length > 0) {\r\n      dispatch({ type: \"views/comment/data\", value: comments })\r\n    }\r\n  }, [data]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n  }\r\n}\r\n\r\nconst Comment = () => {\r\n  const store = useStore()\r\n  const dispatch = useDispatch()\r\n  const songId = useSelector((state: StoreState) => state.playpage.songId)\r\n  const comment = useSelector((state: any) => state.comment.data)\r\n  const {loading, error} = useComment(songId, store.getState(), dispatch)\r\n  const {onTouchStart, onTouchEnd} = useTouchEvent(() => {})\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      {loading && <Loading></Loading>}\r\n      {comment && (\r\n        <Scroll mode=\"normal-scroll-y\" config={commentPageConf}>\r\n          <List mode=\"COMMENT_LIST\" data={comment} onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}></List>\r\n        </Scroll>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","D:\\web\\wang-player\\react-mobile\\src\\views\\Search\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\playpage\\action.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\audio\\action.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\components\\List\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\components\\Scroll\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\views\\Search\\define.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\views\\Recommend\\define.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\views\\PlayListDetails\\define.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\utils\\hook.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\utils\\tools.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\service\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\components\\Loading\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\service\\http.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\components\\ProgressBar\\index.tsx",[],"D:\\web\\wang-player\\react-mobile\\src\\service\\config.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\testlog\\reducer.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\store\\comment\\reducer.ts",[],"D:\\web\\wang-player\\react-mobile\\src\\views\\MoreDetails\\inedx.tsx",["168"],"D:\\web\\wang-player\\react-mobile\\src\\views\\MoreDetails\\define.ts",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":13,"column":9,"nodeType":"175","messageId":"176","endLine":13,"endColumn":16},{"ruleId":"173","severity":1,"message":"177","line":48,"column":13,"nodeType":"175","messageId":"176","endLine":48,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":41,"column":9,"nodeType":"175","messageId":"176","endLine":41,"endColumn":16},{"ruleId":"173","severity":1,"message":"178","line":43,"column":19,"nodeType":"175","messageId":"176","endLine":43,"endColumn":24},{"ruleId":"179","severity":1,"message":"180","line":35,"column":5,"nodeType":"181","endLine":35,"endColumn":7,"suggestions":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"@typescript-eslint/no-unused-vars","'testLog' is assigned a value but never used.","Identifier","unusedVar","'pathname' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [history]",{"range":"188","text":"189"},[1055,1057],"[history]"]