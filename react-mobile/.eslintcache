[{"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\index.tsx":"1","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\App.tsx":"2","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\layouts\\index.tsx":"3","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\index.ts":"4","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\recommend\\index.tsx":"5","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\PlayPage\\index.tsx":"6","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\utils\\hook.ts":"7","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\index.tsx":"8","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\Player\\index.tsx":"9","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\ProgressBar\\index.tsx":"10","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\http.ts":"11","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\utils\\tools.ts":"12","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\config.ts":"13","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Recommend\\index.tsx":"14","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\PlayListDetails\\index.tsx":"15","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\audio\\reducer.ts":"16","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\playlist\\reducer.ts":"17","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\global\\reducer.ts":"18","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\playpage\\reducer.ts":"19","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\types.ts":"20","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\router\\index.ts":"21","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\MiniController\\index.tsx":"22","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\MiniList\\index.tsx":"23","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\global\\action.ts":"24","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Comment\\index.tsx":"25","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Search\\index.tsx":"26","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\List\\index.tsx":"27","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\Scroll\\index.tsx":"28","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\playpage\\action.ts":"29","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Recommend\\define.ts":"30","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\HOC\\Loading\\index.tsx":"31","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\audio\\action.ts":"32","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\detail\\reducer.ts":"33","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\detail\\action.ts":"34","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\recommend\\reducer.ts":"35"},{"size":452,"mtime":1621474307190,"results":"36","hashOfConfig":"37"},{"size":259,"mtime":1619491199162,"results":"38","hashOfConfig":"37"},{"size":3173,"mtime":1621999966238,"results":"39","hashOfConfig":"37"},{"size":735,"mtime":1622084792572,"results":"40","hashOfConfig":"37"},{"size":455,"mtime":1615165785179,"results":"41","hashOfConfig":"37"},{"size":7044,"mtime":1622100424945,"results":"42","hashOfConfig":"37"},{"size":1494,"mtime":1622440315226,"results":"43","hashOfConfig":"37"},{"size":2469,"mtime":1621476796482,"results":"44","hashOfConfig":"37"},{"size":2803,"mtime":1622442178993,"results":"45","hashOfConfig":"37"},{"size":4435,"mtime":1622086192889,"results":"46","hashOfConfig":"37"},{"size":864,"mtime":1615165785173,"results":"47","hashOfConfig":"37"},{"size":3104,"mtime":1622442023437,"results":"48","hashOfConfig":"37"},{"size":210,"mtime":1621818802713,"results":"49","hashOfConfig":"37"},{"size":5812,"mtime":1622442879437,"results":"50","hashOfConfig":"37"},{"size":5696,"mtime":1622190192933,"results":"51","hashOfConfig":"37"},{"size":802,"mtime":1621998530809,"results":"52","hashOfConfig":"37"},{"size":483,"mtime":1621836804371,"results":"53","hashOfConfig":"37"},{"size":700,"mtime":1622008151066,"results":"54","hashOfConfig":"37"},{"size":1222,"mtime":1622008744244,"results":"55","hashOfConfig":"37"},{"size":1453,"mtime":1622014610828,"results":"56","hashOfConfig":"37"},{"size":1087,"mtime":1620960566640,"results":"57","hashOfConfig":"37"},{"size":2653,"mtime":1622442003761,"results":"58","hashOfConfig":"37"},{"size":1655,"mtime":1622009458347,"results":"59","hashOfConfig":"37"},{"size":1751,"mtime":1622167785898,"results":"60","hashOfConfig":"37"},{"size":1524,"mtime":1622171719880,"results":"61","hashOfConfig":"37"},{"size":3682,"mtime":1622001087557,"results":"62","hashOfConfig":"37"},{"size":3671,"mtime":1622442144677,"results":"63","hashOfConfig":"37"},{"size":5375,"mtime":1622191123172,"results":"64","hashOfConfig":"37"},{"size":1869,"mtime":1622085794235,"results":"65","hashOfConfig":"37"},{"size":926,"mtime":1622016283008,"results":"66","hashOfConfig":"37"},{"size":1529,"mtime":1622173958981,"results":"67","hashOfConfig":"37"},{"size":1690,"mtime":1622008612147,"results":"68","hashOfConfig":"37"},{"size":790,"mtime":1622008093917,"results":"69","hashOfConfig":"37"},{"size":1849,"mtime":1622191167910,"results":"70","hashOfConfig":"37"},{"size":614,"mtime":1622014657848,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"4mpgx7",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"74"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"74"},"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\index.tsx",[],["161","162"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\App.tsx",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\layouts\\index.tsx",["163"],"import React from \"react\"\r\nimport { withRouter, Switch, Route } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\n\r\nimport { NavBar, Icon } from \"antd-mobile\"\r\nimport Player from \"@/components/Player\"\r\nimport MiniController from \"@/components/MiniController\"\r\nimport MiniList from \"@/components/MiniList\"\r\n\r\nimport RouterConfig from \"@/router\"\r\n\r\nimport \"./index.less\"\r\n\r\nlet oldLocation: any = null\r\nconst DEFAULT_SCENE_CONFIG = {\r\n  enter: \"from-right\",\r\n  exit: \"to-exit\",\r\n}\r\n\r\n// 注意: 过渡实现逻辑\r\nconst getSceneConfig = (location: any) => {\r\n  const matchedRoute = RouterConfig.find((config) => new RegExp(`^${config.path}$`).test(location.pathname))\r\n  return (matchedRoute && matchedRoute.sceneConfig) || DEFAULT_SCENE_CONFIG\r\n}\r\n\r\nconst Layouts = (props: any) => {\r\n  const { history, location } = props\r\n\r\n  const { setDetailId, dispatchForShowController } = props\r\n\r\n  const goBack = () => {\r\n    const { pathname } = history.location\r\n    if (pathname === \"/\") {\r\n      setDetailId(null)\r\n      return\r\n    } else if (pathname === \"/play\") {\r\n      dispatchForShowController(true)\r\n    }\r\n    history.goBack()\r\n  }\r\n\r\n  const goSearch = () => {\r\n    history.push(\"/search\")\r\n  }\r\n\r\n  // 注意: 过渡实现逻辑\r\n  let classNames = \"\"\r\n  if (history.action === \"PUSH\") {\r\n    classNames = \"forward-\" + getSceneConfig(location)?.enter\r\n  } else if (history.action === \"POP\" && oldLocation) {\r\n    classNames = \"back-\" + getSceneConfig(oldLocation)?.exit\r\n  }\r\n\r\n  // 更新旧location\r\n  oldLocation = location\r\n\r\n  const fun1 = () => {\r\n    dispatchForShowController(true)\r\n  }\r\n\r\n  const dom = (\r\n    <>\r\n      <div className=\"layouts\">\r\n        {/* <button onClick={fun1}>mini-player</button> */}\r\n        {/* <Icon key=\"1\" type=\"ellipsis\" /> */}\r\n        <NavBar\r\n          mode=\"dark\"\r\n          icon={<Icon type=\"left\" />}\r\n          onLeftClick={goBack}\r\n          rightContent={[<Icon key=\"0\" type=\"search\" style={{ marginRight: \"16px\" }} onClick={goSearch} />]}\r\n        ></NavBar>\r\n        <TransitionGroup childFactory={(child) => React.cloneElement(child, { classNames })} className=\"router-view\">\r\n          <CSSTransition timeout={500} key={location.pathname} unMountOnExit>\r\n            {/* 注意  location移除会存在问题*/}\r\n            <Switch location={location}>\r\n              {RouterConfig.map((config: any, index: number) => (\r\n                <Route key={index} {...config}></Route>\r\n              ))}\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <MiniController></MiniController>\r\n        <MiniList></MiniList>\r\n      </div>\r\n      <Player></Player>\r\n    </>\r\n  )\r\n\r\n  return dom\r\n}\r\n\r\nconst stateToProps = (state: any) => ({})\r\n\r\nconst dispatchToProps = (dispatch: any) => {\r\n  return {\r\n    setDetailId(id: number) {\r\n      dispatch({ type: \"detail/id\", value: id })\r\n    },\r\n    dispatchForShowController(status: boolean) {\r\n      dispatch({ type: \"global/show-controller\", value: status })\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(stateToProps, dispatchToProps)(withRouter(Layouts))\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\index.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\recommend\\index.tsx",["164","165","166","167","168"],"import {useState} from 'react'\r\n// import {Route} from 'react-router-dom'\r\nimport {TabBar} from 'antd-mobile'\r\n\r\nconst Route1 = () => {\r\n  return (\r\n    <div>Route1</div>\r\n  )\r\n}\r\n\r\nconst Route2 = () => {\r\n  return (\r\n    <div>Route2</div>\r\n  )\r\n}\r\n\r\nconst TAB = ['FIRST', 'SECOND']\r\n\r\nconst Recommend = () => {\r\n  const [selectedTab, setSelectedTab] = useState<String>(TAB[0])\r\n  return (\r\n    <div>\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recommend",["169","170"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\PlayPage\\index.tsx",["171","172","173"],"import { useState, useEffect, useRef } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport ProgressBar from \"@/components/ProgressBar\"\r\nimport { beforeCanPlayAction, changeSongAction } from \"@/store/audio/action\"\r\nimport { fetchLyricAction, getCurrentLineNumAction, getter_IsProgressChanging } from \"@/store/playpage/action\"\r\nimport { togglePlayAction } from \"@/store/audio/action\"\r\nimport { formatForPlayTime } from \"@/utils/tools\"\r\nimport { useWatch } from \"@/utils/hook\"\r\nimport List from \"@/components/List\"\r\nimport \"./index.less\"\r\n\r\nconst INITIAL_TOP = 200\r\nconst MOVE = -50\r\n\r\nconst PlayPage = (props: any) => {\r\n  const {\r\n    EventEmitter,\r\n    duration,\r\n    currentSongIndex,\r\n    playList,\r\n    lyric,\r\n    currentLyricLine,\r\n    songId,\r\n    percent,\r\n    isProgressChanging,\r\n    paused,\r\n    detailId,\r\n    history,\r\n  } = props\r\n  const { play, fetchLyricData, setCurrentLineNum, getter_isProgressChanging, togglePlayStatus, toggleSonge, progressChanging } = props\r\n  const playRef = useRef<any>(null)\r\n  const cdWrapperElemRef = useRef<any>()\r\n  const lyricElemRef = useRef<any>()\r\n  const degRef = useRef<any>({\r\n    deg: null,\r\n    start: true,\r\n  })\r\n  const [showLyric, setShowLyric] = useState<boolean>(false)\r\n\r\n  /**\r\n   * 问题: 在useEffect(()=>{}, [])中, timeupdate回调中无法读取 currentTime 和 duration, 暂时使用useEffect来更新percent\r\n   * 解决: 独立使用useEffect, useEffect(()=>{}, [currentTime, duration])可以获取到\r\n   * 后续发现不存在问题, 待观察\r\n   */\r\n\r\n  const onTimeupdate = (payload: any) => {\r\n    const { currentTime } = payload\r\n\r\n    if (!getter_isProgressChanging()) {\r\n      progressChanging(currentTime / duration)\r\n    }\r\n    setCurrentLineNum(currentTime)\r\n\r\n    if (degRef.current.start) {\r\n      degRef.current.deg = (degRef.current.deg || 0) + 2\r\n      if (degRef.current.deg >= 360) degRef.current.deg = 0\r\n      rotate(degRef.current.deg)\r\n    }\r\n  }\r\n\r\n  // 初始audio实例\r\n  // 1. 通过audio.current.src直接设置无效, 在标签中设置src可以生效 src={xxx}\r\n  // 2. chrome66以及更高的版本不允许媒体自动播放, 76前可以通过设置  chrome://flags/#autoplay-policy 设置 autoplay-policy 为  “No user gesture is required”\r\n  //  77需要通过查看网站信息 设置允许声音\r\n\r\n  const togglePlay = () => {\r\n    togglePlayStatus()\r\n  }\r\n\r\n  const handleNextSong = () => {\r\n    toggleSonge(\"NEXT\")\r\n  }\r\n\r\n  const handlePrevSong = () => {\r\n    toggleSonge(\"PREV\")\r\n  }\r\n\r\n  const rotate = (deg: number) => {\r\n    if (cdWrapperElemRef.current && cdWrapperElemRef.current.style) {\r\n      cdWrapperElemRef.current.style.transform = `rotate(${deg}deg)`\r\n    }\r\n  }\r\n\r\n  const image = () => {\r\n    if (playList[currentSongIndex].album.picUrl) {\r\n      return playList[currentSongIndex].album.picUrl + \"?param=300y300\"\r\n    } else {\r\n      return process.env.PUBLIC_URL + \"/image/wink.png\"\r\n    }\r\n  }\r\n\r\n  const scroll = () => {\r\n    if (lyricElemRef.current) {\r\n      lyricElemRef.current.style.top = INITIAL_TOP + currentLyricLine * MOVE + \"px\"\r\n    }\r\n  }\r\n\r\n  const toggleMainView = () => {\r\n    setShowLyric((prev) => {\r\n      degRef.current.start = prev\r\n      degRef.current.deg = 0\r\n      return !prev\r\n    })\r\n  }\r\n\r\n  const pageToComment = () => {\r\n    history.push({pathname: \"/comment\"})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lyric.lyricList.length === 0) fetchLyricData(songId)\r\n    degRef.current.deg = 0\r\n    EventEmitter.on(\"timeupdate\", onTimeupdate)\r\n    return () => {\r\n      EventEmitter.off(\"timeupdate\", onTimeupdate)\r\n    }\r\n  }, [])\r\n\r\n  useWatch(detailId, (prev) => {\r\n    if (prev && prev === detailId) return\r\n    const initIndex = 0\r\n    play(initIndex)\r\n  })\r\n\r\n  useWatch(songId, (prev) => {\r\n    if (prev && prev === detailId) return\r\n    fetchLyricData(songId)\r\n  })\r\n\r\n  useEffect(() => scroll(), [currentLyricLine])\r\n\r\n  useEffect(() => {\r\n    if (showLyric) scroll()\r\n  }, [showLyric])\r\n\r\n  useEffect(() => {\r\n    console.log(isProgressChanging)\r\n  }, [isProgressChanging])\r\n\r\n  return (\r\n    <div ref={playRef} className=\"play\">\r\n      <div className=\"play--main-container\" onClick={toggleMainView}>\r\n        {!showLyric && (\r\n          <div className=\"play--main\">\r\n            <div ref={cdWrapperElemRef} className=\"play--cd-wrapper\">\r\n              {playList[currentSongIndex] && <img src={image()} alt=\"\" />}\r\n            </div>\r\n            <div className=\"play--other-btn\" onClick={pageToComment}>\r\n              <div style={{ fontSize: \"24px\", width: \"30px\" }} className=\"iconfont iconcomment\"></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showLyric && (\r\n          <div className=\"play--lyric\" ref={(ref) => (lyricElemRef.current = ref)}>\r\n            {lyric && lyric.lyricList.length > 0 && <List mode=\"LYRIC\" data={lyric.lyricList} current={currentLyricLine}></List>}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"edit-container\">\r\n        <div className=\"play--progress\">\r\n          <span className=\"time left\">{formatForPlayTime(duration * percent)}</span>\r\n          <div style={{ width: \"calc(100% - 70px)\" }}>\r\n            <ProgressBar percent={percent}></ProgressBar>\r\n          </div>\r\n          <span className=\"time right\">{formatForPlayTime(duration)}</span>\r\n        </div>\r\n        <div className=\"play--control\">\r\n          <div style={{ fontSize: \"32px\" }} className=\"iconfont iconprev\" onClick={handlePrevSong}></div>\r\n          <div style={{ fontSize: \"48px\" }} className={`iconfont ${typeof paused === \"boolean\" && !paused ? \"iconpause-circle\" : \"iconstart\"}`} onClick={togglePlay}></div>\r\n          <div style={{ fontSize: \"32px\" }} className=\"iconfont iconnext\" onClick={handleNextSong}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst stateToProps = (state: any) => ({\r\n  EventEmitter: state.global.EventEmitter,\r\n  detailId: state.detail.id,\r\n  playList: state.playlist.data,\r\n  currentSongIndex: state.playlist.currentSongIndex,\r\n  duration: state.audio.duration,\r\n  lyric: state.playpage.lyric,\r\n  currentLyricLine: state.playpage.currentLyricLine,\r\n  songId: state.playpage.songId,\r\n  isProgressChanging: state.playpage.isProgressChanging,\r\n  percent: state.playpage.percent,\r\n  paused: state.audio.paused,\r\n})\r\n\r\nconst dispatchToProps = (dispatch: any) => ({\r\n  play(songIndex: number) {\r\n    dispatch(beforeCanPlayAction(songIndex))\r\n  },\r\n  fetchLyricData(songId: string | number) {\r\n    dispatch(fetchLyricAction(songId))\r\n  },\r\n  setCurrentLineNum(time: number) {\r\n    dispatch(getCurrentLineNumAction(time))\r\n  },\r\n  getter_isProgressChanging() {\r\n    return dispatch(getter_IsProgressChanging())\r\n  },\r\n  togglePlayStatus() {\r\n    dispatch(togglePlayAction())\r\n  },\r\n  toggleSonge(type: any) {\r\n    dispatch(changeSongAction(type))\r\n  },\r\n  progressChanging(percent: any) {\r\n    dispatch({ type: \"play-page/percent\", value: percent })\r\n  },\r\n})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(withRouter(PlayPage))\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\utils\\hook.ts",["174","175","176"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\index.tsx",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\Player\\index.tsx",["177"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\ProgressBar\\index.tsx",["178"],"import { useEffect, useRef, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {  changeProgressAction } from \"@/store/playpage/action\"\r\n\r\nimport \"./index.less\"\r\n\r\n// 进度条按钮宽度\r\nconst progressBarWidth = 16\r\n\r\n// 问题: 全面屏手势滑动会进行翻页, 导致touchmove不能正确调用\r\n// 测试发现小米手机浏览器存在原生滑动事件, 导致问题, 在微信中可正常使用\r\n\r\nconst ProgressBar = (props: any) => {\r\n  const { percent } = props\r\n  const { setIsProgressChanging, progressChanging, progressChange } = props\r\n  const progressBar = useRef<any>(null),\r\n    progress = useRef<any>(null),\r\n    progressBtn = useRef<any>(null)\r\n  const [touch, setTouch] = useState({\r\n    initiated: false,\r\n    startX: 0,\r\n  })\r\n  const [progressClientWidth, setProgressClientWidth] = useState<number>(0)\r\n  const [barWidth, setBarWidth] = useState<number>(0)\r\n\r\n  const progressClick = (e: any) => {\r\n    const rect = progressBar.current.getBoundingClientRect()\r\n    const offsetWidth = e.clientX - rect.left\r\n    const percent = offsetWidth / barWidth\r\n    progressChange( percent.toFixed(2))\r\n  }\r\n\r\n  const handleOffset = (offsetWidth: any) => {\r\n    progress.current.style.width = `${offsetWidth}px`\r\n    progressBtn.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`\r\n  }\r\n\r\n  const progressTouchStart = (e: any) => {\r\n    setIsProgressChanging(true)\r\n    setTouch({\r\n      initiated: true,\r\n      startX: e.touches[0].clientX,\r\n    })\r\n    setProgressClientWidth(progress.current.clientWidth)\r\n  }\r\n\r\n  const progressTouchMove = (e: any) => {\r\n    //   Math.max(0, this.progressClientWidth + deltaX) -->  0  移动超出左边界\r\n    //   Math.max(0, this.progressClientWidth + deltaX) -->  delta  正常移动\r\n    //\r\n    //   barWidth 实际进度条宽度\r\n    //   b = Math.max(0, this.progressClientWidth + deltaX)\r\n    //   Math.min(a, b)  -->  a 超出右边界\r\n    //   Math.min(a, b)  -->  b 正常移动\r\n\r\n    if (!touch.initiated) return\r\n    const deltaX = e.touches[0].clientX - touch.startX\r\n    const offsetWidth = Math.min(barWidth === null ? 0 : barWidth, Math.max(0, progressClientWidth + deltaX))\r\n    handleOffset(offsetWidth)\r\n    progressChanging(getPrecent())\r\n  }\r\n\r\n  const progressTouchEnd = () => {\r\n    // *问题: 从$refs获取样式数据会取到更新之前的数据\r\n    // 在move事件上启用节流后, 可以避免使用定时器\r\n    // 先抛出事件, 再将initiated修改为false\r\n    setIsProgressChanging(false)\r\n    progressChange(getPrecent())\r\n    setTouch({\r\n      ...touch,\r\n      initiated: false,\r\n    })\r\n  }\r\n\r\n  const getPrecent = () => {\r\n    let num = progress.current.clientWidth / (barWidth === null ? 0 : barWidth)\r\n    return num.toFixed(4)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // !问题: 能否移除setTimeout\r\n    setTimeout(() => {\r\n      if (progressBar.current) {\r\n        setBarWidth(progressBar.current.clientWidth - progressBarWidth)\r\n      }\r\n    }, 0)\r\n    return () => {\r\n      progressBar.current = null\r\n      progress.current = null\r\n      progressBtn.current = null\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // timeupdate事件触发\r\n    if (percent > 0 && !touch.initiated && barWidth !== null) {\r\n      const offsetWidth = percent * barWidth\r\n      handleOffset(offsetWidth)\r\n    }\r\n  }, [percent])\r\n\r\n  return (\r\n    <div className=\"progress-bar__container\" ref={progressBar} onClick={progressClick}>\r\n      <div className=\"progress-bar\" onTouchStart={progressTouchStart} onTouchMove={progressTouchMove} onTouchEnd={progressTouchEnd}>\r\n        <div className=\"progress-bar__background\"></div>\r\n        {/* 进度条 */}\r\n        <div className=\"progress-bar--progress\" ref={progress}></div>\r\n        {/* 当前进度按钮 */}\r\n        <div className=\"progress-bar--btn__wrapper\" ref={progressBtn}>\r\n          <div className=\"progress-bar--btn\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst stateToProps = (state: any) => ({})\r\n\r\nconst dispatchToProps = (dispatch: any) => ({\r\n  setIsProgressChanging(status: boolean) {\r\n    dispatch({ type: \"play-page/is-progress-changing\", value: status })\r\n  },\r\n  progressChanging (percent: any) {\r\n    dispatch({type: \"play-page/percent\", value: percent})\r\n  },\r\n  progressChange (percent: any) {\r\n    dispatch(changeProgressAction(percent))\r\n  },\r\n})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(ProgressBar)\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\http.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\utils\\tools.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\service\\config.ts",["179"],"export default {\r\n  // company http://192.168.31.85:3022\r\n  // home http://192.168.101.100:3022\r\n  baseUrl: process.env.NODE_ENV === \"development\" ? \"http://192.168.31.85:3022\" : \"http://106.13.207.132:3022\"\r\n}","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Recommend\\index.tsx",["180","181","182"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\PlayListDetails\\index.tsx",["183","184","185","186","187"],"import { useState, useEffect, useRef } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nimport { beforeCanPlayAction } from \"@/store/audio/action\"\r\nimport { appendPlayListAction } from \"@/store/detail/action\"\r\nimport { initialActionForListDetail } from \"@/store/detail/action\"\r\nimport { withLoading } from \"@/components/HOC/Loading\"\r\n\r\nimport { Toast } from \"antd-mobile\"\r\nimport List from \"@/components/List\"\r\nimport Scroll from \"@/components/Scroll\"\r\n\r\nimport \"./index.less\"\r\n\r\n// 问题: pullup后, 返回上个页面, 再次进入页面长度异常(很长)\r\n// 猜想为pullup对transformY设置存在问题\r\n\r\nconst PlayListDetails = (props: any) => {\r\n  const { listDetail, history, detailId, playListOfListDetail } = props\r\n  const { play, setPlayList, initialForListDetail, appendPlayList, setDetailId } = props\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const pullDownWrapperRef = useRef<any>()\r\n  const instanceRef = useRef<any>(null)\r\n  const touchTimeRef = useRef<any>()\r\n\r\n  // const [beforePullDown, setBeforePullDown] = useState<boolean>(true)\r\n  const [beforePullUp, setBeforePullUp] = useState<boolean>(true)\r\n\r\n  instanceRef.current = {\r\n    bscroll: {\r\n      scrollY: true,\r\n      scrollX: false,\r\n      // 锁定方向\r\n      directionLockThreshold: 0,\r\n      freeScroll: false,\r\n      pullDownRefresh: {\r\n        threshold: 100,\r\n        stop: 50,\r\n      },\r\n      pullUpLoad: {\r\n        threshold: -125,\r\n        stop: 50,\r\n      },\r\n    },\r\n  }\r\n\r\n  const pullingDown = (instance: any) => {\r\n    console.log(\"pull-down\")\r\n    instance.finishPullDown()\r\n  }\r\n\r\n  // 问题: 待优化\r\n  const pullingUp = async (instance: any) => {\r\n    setBeforePullUp(false)\r\n    let res = await appendPlayList()\r\n    if (!res.success) {\r\n      Toast.fail(res.msg, 1.5, () => {}, false)\r\n      instance.finishPullUp()\r\n    } else {\r\n      instance.finishPullUp()\r\n      instance.refresh()\r\n    }\r\n    setBeforePullUp(true)\r\n  }\r\n\r\n  const onTouchStart = () => {\r\n    touchTimeRef.current = { date: new Date().getTime() }\r\n  }\r\n\r\n  const onTouchEnd = (songIndex: number) => {\r\n    const date = new Date().getTime()\r\n    if (date - touchTimeRef.current.date <= 75) {\r\n      setPlayList(playListOfListDetail)\r\n      play(songIndex)\r\n    }\r\n    touchTimeRef.current = null\r\n  }\r\n\r\n  const init = async () => {\r\n    const id = history?.location?.query?.id\r\n    if (!id) history.push({ pathname: \"/\" })\r\n    if (detailId === null || detailId !== id) {\r\n      setLoading(true)\r\n      setDetailId(id)\r\n      await initialForListDetail(id)\r\n      setTimeout(() => setLoading(false), 1000)\r\n    }\r\n  }\r\n\r\n  // *问题: list高度大于BScroll容器高度, 却不能拉到底部(视觉上像已经拉到底部的感觉)\r\n  // 解决: 该effect会触发**两次**(data为undefined和data有值的时候), BScroll进行实例时, data.playlist未获取到, 造成实例时BScroll容器高度是没有list数据的高度(高度数值小), 因此在data.playlist获取到后在进行实例\r\n\r\n  useEffect(() => {\r\n    // 纯音乐 453208524    like 129219563   英文 3185023336\r\n    init()\r\n\r\n    setTimeout(() => {\r\n      setLoading(true)\r\n    }, 5000)\r\n\r\n    return () => {\r\n      pullDownWrapperRef.current = null\r\n    }\r\n  }, [])\r\n\r\n  const PlayListDetailMain = () => (\r\n    <Scroll mode=\"list-detail\" config={instanceRef.current} pullDown={pullingDown} fetchDataForPullUp={appendPlayList}>\r\n      <div className=\"list-detail\">\r\n        {/* {!beforePullDown && <div style={{ color: \"red\" }}>pulldown!</div>} */}\r\n        <div>\r\n          {listDetail && (\r\n            <div className=\"list-detail--top\">\r\n              <div className=\"detail\">\r\n                <div className=\"list-detail--coverImg\">\r\n                  <img src={listDetail.coverImgUrl} alt=\"\" />\r\n                </div>\r\n                <div className=\"list-detail--info\">\r\n                  <div className=\"list-detail--name\">{listDetail.name}</div>\r\n                  <div className=\"list-detail--creator-info\">\r\n                    <img src={listDetail.avatarUrl} alt=\"\" />\r\n                    <div className=\"list-detail--nickname\">{listDetail.nickname}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"edit\"></div>\r\n            </div>\r\n          )}\r\n          <div className=\"song-list\" id=\"song-list\">\r\n            <List data={playListOfListDetail} mode=\"PLAY_LIST\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}></List>\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\", height: \"50px\" }}></div>\r\n      </div>\r\n    </Scroll>\r\n  )\r\n\r\n  // const ViewMainWithLoading = withLoading(PlayListDetailMain)\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      {/* <ViewMainWithLoading loading={loading} /> */}\r\n      {playListOfListDetail.length > 0 && PlayListDetailMain()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst stateToProps = (state: any) => ({\r\n  listDetail: state.detail.data,\r\n  playList: state.playlist.data,\r\n  detailId: state.detail.id,\r\n  playListOfListDetail: state.detail.playList,\r\n})\r\n\r\nconst dispatchToProps = (dispatch: any) => ({\r\n  play(songIndex: number) {\r\n    dispatch(beforeCanPlayAction(songIndex))\r\n  },\r\n  setPlayList(playList: any[]) {\r\n    dispatch({ type: \"play-list/data\", value: playList })\r\n  },\r\n  appendPlayList() {\r\n    return dispatch(appendPlayListAction())\r\n  },\r\n  initialForListDetail(detailId: any) {\r\n    return dispatch(initialActionForListDetail(detailId))\r\n  },\r\n  setDetailId(id: number) {\r\n    dispatch({ type: \"detail/id\", value: id })\r\n  },\r\n})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(withRouter(PlayListDetails))\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\audio\\reducer.ts",["188"],"import * as types from \"../types\"\r\n\r\nconst defaultState = {\r\n  paused: null,\r\n  duration: 0,\r\n  src: undefined,\r\n  instance: null,\r\n}\r\n\r\nexport default (state: any = defaultState, action: any) => {\r\n  const {type, value} = action\r\n  switch (type) {\r\n    case types.AUDIO__INSTANCE:\r\n      return {\r\n        ...state,\r\n        instance: value,\r\n      }\r\n    case types.AUDIO__DURATION:\r\n      return {\r\n        ...state,\r\n        duration: value,\r\n      }\r\n    // case types.AUDIO__VOLUME:\r\n    //   return {\r\n    //     ...state,\r\n    //     volume: value,\r\n    //   }\r\n    case types.AUDIO__SRC:\r\n      return {\r\n        ...state,\r\n        src: value,\r\n      }\r\n    case types.AUDIO__PAUSED:\r\n      return {\r\n        ...state,\r\n        paused: value,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\playlist\\reducer.ts",["189"],"import * as types from \"../types\"\r\n\r\nconst defaultState = {\r\n  data: [],\r\n  currentSongIndex: null,\r\n}\r\n\r\nexport default (state: any = defaultState, action: any) => {\r\n  const {type, value} = action\r\n  switch (type) {\r\n    case types.PLAY_LIST__DATA:\r\n      return {\r\n        ...state,\r\n        data: value,\r\n      }\r\n    case types.PLAY_LIST__CURRENT_SONG_INDEX:\r\n      return {\r\n        ...state,\r\n        currentSongIndex: value,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\global\\reducer.ts",["190"],"import EventEmitter from \"events\"\r\nimport * as types from \"../types\"\r\n\r\nconst defaultState = {\r\n  EventEmitter: new EventEmitter(),\r\n  showController: false,\r\n  searchPage: {},\r\n  showMiniList: false,\r\n}\r\n\r\nexport default (state: any = defaultState, action: any) => {\r\n  const {type, value} = action\r\n  switch (type) {\r\n    case types.GLOBAL__SHOW_CONTROLLER:\r\n      return {\r\n        ...state,\r\n        showController: value,\r\n      }\r\n    case types.GLOBAL__SEARCH_PAGE:\r\n      return {\r\n        ...state,\r\n        searchPage: value,\r\n      }\r\n    case types.GLOBAL__SHOW_MINI_LIST:\r\n      return {\r\n        ...state,\r\n        showMiniList: value,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\playpage\\reducer.ts",["191"],"import * as types from \"../types\"\r\n\r\nconst defaultState = {\r\n  lyric: {\r\n    timeList: [],\r\n    lyricList: [],\r\n    tLyricList: [],\r\n  },\r\n  currentLyricLine: 0,\r\n  songId: null,\r\n  isProgressChanging: false,\r\n  percent: 0,\r\n  // deg: 0,\r\n  // showLyric: false,\r\n}\r\n\r\nexport default (state: any = defaultState, action: any) => {\r\n  const {type, value} = action\r\n  switch (type) {\r\n    case types.PLAY_PAGE__LYRIC:\r\n      return {\r\n        ...state,\r\n        lyric: value,\r\n      }\r\n    case types.PLAY_PAGE__CURRENT_LYRIC_LINE:\r\n      return {\r\n        ...state,\r\n        currentLyricLine: value,\r\n      }\r\n    case types.PLAY_PAGE__SONG_ID:\r\n      return {\r\n        ...state,\r\n        songId: value,\r\n      }\r\n    case types.PLAY_PAGE__IS_PROGRESS_CHANGING:\r\n      return {\r\n        ...state,\r\n        isProgressChanging: value,\r\n      }\r\n    case types.PLAY_PAGE__PERCENT:\r\n      return {\r\n        ...state,\r\n        percent: value,\r\n      }\r\n    // case types.PLAY_PAGE__DEG:\r\n    //   return {\r\n    //     ...state,\r\n    //     deg: value,\r\n    //   }\r\n    // case types.PLAY_PAGE__SHOW_LYRIC:\r\n    //   return {\r\n    //     ...state,\r\n    //     showLyric: value,\r\n      // }\r\n    default:\r\n      return state\r\n  }\r\n}","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\types.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\router\\index.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\MiniController\\index.tsx",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\MiniList\\index.tsx",["192"],"import {  useEffect, useRef, } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\n\r\nimport List from \"@/components/List\"\r\nimport Scroll from \"@/components/Scroll\"\r\n\r\n\r\nimport \"./index.less\"\r\n\r\nconst MiniList = (props: any) => {\r\n  const { playList, showMiniList } = props\r\n  const { dispatchForShowMiniList } = props\r\n  const miniListConf = useRef<any>({\r\n    scrollY: true,\r\n    scrollX: false,\r\n    // 锁定方向\r\n    directionLockThreshold: 0,\r\n    freeScroll: false,\r\n  })\r\n\r\n  const onTouchStart = () => {}\r\n\r\n  const onTouchEnd = () => {}\r\n\r\n  const onClick = () => {\r\n    dispatchForShowMiniList(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {showMiniList && <div className=\"mini-list--mark\" onClick={onClick}></div>}\r\n      <CSSTransition in={showMiniList} timeout={500} classNames=\"transition\">\r\n        <div className=\"mini-list--container\">\r\n          <div className=\"mini-list--title\">当前播放</div>\r\n          {playList.length > 0 && (\r\n            <Scroll mode=\"normal-scroll-y\" config={miniListConf.current}>\r\n              <List mode=\"MINI_LIST\" data={playList} onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}></List>\r\n            </Scroll>\r\n          )}\r\n        </div>\r\n      </CSSTransition>\r\n    </>\r\n  )\r\n}\r\n\r\nconst stateToProps = (state: any) => ({\r\n  playList: state.playlist.data,\r\n  showMiniList: state.global.showMiniList,\r\n})\r\n\r\nconst dispatchToProps = (dispatch: any) => ({\r\n  dispatchForShowMiniList(status: boolean) {\r\n    dispatch({ type: \"global/show-mini-list\", value: status })\r\n  },\r\n})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(MiniList)\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\global\\action.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Comment\\index.tsx",["193"],"import * as api from \"@/service/index\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { withLoading } from \"@/components/HOC/Loading\"\r\nimport List from \"@/components/List\"\r\nimport Scroll from \"@/components/Scroll\"\r\n\r\nimport \"./index.less\"\r\n\r\nconst Comment = (props: any) => {\r\n  const { songId } = props\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [comment, setComment] = useState<any>()\r\n  const commentPageConf = useRef<any>({\r\n    scrollY: true,\r\n    scrollX: false,\r\n    // 锁定方向\r\n    directionLockThreshold: 0,\r\n    freeScroll: false,\r\n  })\r\n\r\n  const fetchMusicComment = async () => {\r\n    setLoading(true)\r\n    let comment = await api.fetchMusicComment(songId, 20, 0)\r\n    setComment(comment)\r\n    setLoading(false)\r\n  }\r\n\r\n  const onTouchStart = () => {}\r\n\r\n  const onTouchEnd = () => {}\r\n\r\n  const ScrollView = () => (\r\n    <Scroll mode=\"normal-scroll-y\" config={commentPageConf.current}>\r\n      <List mode=\"COMMENT_LIST\" data={comment.data.comments} onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}></List>\r\n    </Scroll>\r\n  )\r\n\r\n  const ScrollViewWithLoading = withLoading(ScrollView)\r\n\r\n  useEffect(() => {\r\n    fetchMusicComment()\r\n    return () => {}\r\n  }, [])\r\n\r\n  return <div className=\"page-container\">{comment && <ScrollViewWithLoading loading={loading}></ScrollViewWithLoading>}</div>\r\n}\r\n\r\nconst stateToProps = (state: any) => ({\r\n  songId: state.playpage.songId,\r\n})\r\n\r\nexport default connect(stateToProps)(Comment)\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Search\\index.tsx",["194"],"import { useEffect, useRef, useState } from 'react'\r\nimport { SearchBar } from 'antd-mobile'\r\nimport { connect } from 'react-redux'\r\n// import {Route, Switch} from \"react-router-dom\"\r\n\r\nimport * as api from '@/service'\r\nimport { formatForSearchResult } from '@/utils/tools'\r\nimport { beforeCanPlayAction } from '@/store/audio/action'\r\n// import {appendPlayListAction} from \"@/store/global/action\"\r\nimport List from '@/components/List'\r\nimport Scroll from '@/components/Scroll'\r\n\r\nimport './index.less'\r\n\r\nconst Search = (props: any) => {\r\n  const { diapatchForPlayList, play } = props\r\n\r\n  const [data, setData] = useState<any[]>([])\r\n  const [beforePullUp, setBeforePullUp] = useState<boolean>(true)\r\n  const [value, setValue] = useState<any>()\r\n  const autoFocusInst = useRef<any>()\r\n  const touchTimeRef = useRef<any>()\r\n  const instanceRef = useRef<any>()\r\n\r\n  instanceRef.current = {\r\n    bscroll: {\r\n      scrollY: true,\r\n      scrollX: false,\r\n      // 锁定方向\r\n      directionLockThreshold: 0,\r\n      freeScroll: false,\r\n      pullDownRefresh: {\r\n        threshold: 100,\r\n        stop: 50,\r\n      },\r\n      pullUpLoad: {\r\n        threshold: -125,\r\n        stop: 50,\r\n      },\r\n    },\r\n  }\r\n\r\n  const pullingDown = (instance: any) => {\r\n    console.log('pull-down')\r\n    instance.finishPullDown()\r\n  }\r\n\r\n  // 问题: 待优化\r\n  const pullingUp = async (instance: any) => {\r\n    setBeforePullUp(false)\r\n    getSearchResult(value).then((res: any) => {\r\n      const { songs } = res.data.result\r\n      let data = songs.map((item: any) => formatForSearchResult(item))\r\n      setData((prev: any[]) => prev.concat(data))\r\n      instance.finishPullUp()\r\n      instance.refresh()\r\n      setBeforePullUp(true)\r\n    })\r\n  }\r\n\r\n  const onChange = (value: any) => {\r\n    setValue(value)\r\n  }\r\n\r\n  const onSubmit = (value: any) => {\r\n    getSearchResult(value).then((res: any) => {\r\n      const { songs } = res.data.result\r\n      let data = songs.map((item: any) => formatForSearchResult(item))\r\n      setData(data)\r\n    })\r\n  }\r\n\r\n  const onTouchStart = () => {\r\n    touchTimeRef.current = { date: new Date().getTime() }\r\n  }\r\n\r\n  const onTouchEnd = async (songIndex: number, id: number) => {\r\n    const date = new Date().getTime()\r\n    if (date - touchTimeRef.current.date <= 100) {\r\n      diapatchForPlayList([data[songIndex]])\r\n      console.log(JSON.stringify(data[songIndex]))\r\n      play(0)\r\n    }\r\n    touchTimeRef.current = null\r\n  }\r\n\r\n  const getSearchResult = (keywords: any) => {\r\n    return api.getSearchResult(keywords, 10, 0)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // 问题: 自动获取光标动画为从右到左, 路由动画为从左到右;\r\n    // autoFocusInst.current.focus()\r\n    return () => {\r\n      touchTimeRef.current = {}\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"search--page page-container\">\r\n      <div className=\"search--input-container\">\r\n        <SearchBar placeholder=\"自动获取光标\" ref={ref => (autoFocusInst.current = ref)} onChange={onChange} onSubmit={onSubmit} />\r\n      </div>\r\n      {data.length > 0 && (\r\n        <Scroll mode=\"list-detail\" config={instanceRef.current} pullDown={pullingDown} pullUp={pullingUp}>\r\n          <List mode=\"PLAY_LIST\" data={data} onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}></List>\r\n        </Scroll>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst stateToProps = (state: any) => ({\r\n  \r\n})\r\n\r\nconst dispatchToProps = (dispatch: any) => ({\r\n  diapatchForPlayList(playList: any[]) {\r\n    dispatch({ type: 'play-list/data', value: playList })\r\n  },\r\n  play(songIndex: number) {\r\n    dispatch(beforeCanPlayAction(songIndex))\r\n  },\r\n})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(Search)\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\List\\index.tsx",["195","196","197","198","199","200"],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\Scroll\\index.tsx",["201"],"import { useState, useEffect, useRef } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Toast } from \"antd-mobile\"\r\n\r\nimport BScroll from \"@better-scroll/core\"\r\nimport PullDown from \"@better-scroll/pull-down\"\r\nimport PullUp from \"@better-scroll/pull-up\"\r\nimport Slide from \"@better-scroll/slide\"\r\nimport \"./index.less\"\r\n\r\n// normal-scroll-y 普通纵向滑动\r\n// normal-scroll-x 普通横向滑动\r\n// banner banner模式\r\n\r\nconst Slider = (props: any) => {\r\n  const { mode, config, children, height, width, pullDown, fetchDataForPullUp, click } = props\r\n\r\n  const instance = useRef<any>()\r\n  const sliderRef = useRef<any>(null)\r\n  const sliderGroupRef = useRef<any>(null)\r\n  const sliderWrapperElemRef = useRef<any>()\r\n  const [currentPageIndex, setCurrentPageIndex] = useState(0)\r\n  const [dots, setDots] = useState<any[]>([])\r\n  const [beforePullUp, setBeforePullUp] = useState<boolean>(true)\r\n\r\n  const initial = () => {\r\n    if (children.length === 0) return\r\n    if (mode === \"banner\") BScroll.use(Slide)\r\n    if (mode === \"list-detail\") {\r\n      const use: any = BScroll.use\r\n      use(PullDown)\r\n      use(PullUp)\r\n    }\r\n    instance.current = { ...instance.current, bscroll: new BScroll(sliderRef.current, config.bscroll) }\r\n    const bscroll = instance.current.bscroll\r\n    const hooks = bscroll.scroller.actionsHandler.hooks\r\n    hooks.on(\"click\", (event: any) => click && click())\r\n    if (mode === \"banner\") {\r\n      bscroll.on(\"slideWillChange\", (page: any) => {\r\n        setCurrentPageIndex(page.pageX)\r\n      })\r\n    }\r\n\r\n    // 问题: 没有进行事件解绑\r\n    if (mode === \"list-detail\" && pullDown && fetchDataForPullUp) {\r\n      bscroll.on(\"pullingDown\", () => pullDown(bscroll))\r\n\r\n      bscroll.on(\"pullingUp\", async () => {\r\n        setBeforePullUp(false)\r\n        let res = await fetchDataForPullUp()\r\n        if (!res.success) {\r\n          Toast.fail(res.msg, 1.5, () => {}, false)\r\n          bscroll.finishPullUp()\r\n        } else {\r\n          bscroll.finishPullUp()\r\n          bscroll.refresh()\r\n        }\r\n        setBeforePullUp(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const setSliderWidth = () => {\r\n    let elRefSlider = sliderRef.current\r\n    let elRefSliderGroup = sliderGroupRef.current\r\n    let children = elRefSliderGroup.children\r\n    let sliderWidth = elRefSlider.clientWidth\r\n\r\n    const marginLeft = 10\r\n    if (mode === \"banner\") {\r\n      setDots(Array.from({ length: 10 }).map((item) => true))\r\n    }\r\n    for (let i = 0, len = children.length; i < len; i++) {\r\n      let child = children[i]\r\n      child.classList.add(\"slider-item\")\r\n      if (mode === \"normal-scroll-x\") {\r\n        // 添加margin-left: 5px, 用于隔开\r\n        child.classList.add(\"margin\")\r\n        child.style.width = typeof width === \"number\" ? `${width}px` : width\r\n      }\r\n    }\r\n    if (mode === \"banner\") {\r\n      elRefSliderGroup.style.width = `${sliderWidth * children.length}px`\r\n    } else if (mode === \"normal-scroll-x\") {\r\n      const childClientWidth = children[0].children[0].clientWidth\r\n      elRefSliderGroup.style.width = `${(childClientWidth + marginLeft) * children.length}px`\r\n    }\r\n  }\r\n\r\n  const setSliderHeight = () => {\r\n    sliderRef.current.style.height = sliderWrapperElemRef.current.clientHeight + \"px\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    // 存在children 为false的情况， 避免children不存在又创建BScroll实例\r\n    if (instance.current === undefined) {\r\n      if (Array.isArray(children) && children.length > 0) {\r\n        if (mode === \"banner\" || mode === \"normal-scroll-x\") setSliderWidth()\r\n      } else if (children && !Array.isArray(children)) {\r\n        if (mode === \"normal-scroll-y\") {\r\n          setSliderHeight()\r\n        }\r\n      }\r\n      instance.current = { excuting: true }\r\n      initial()\r\n      return () => {\r\n        console.log(\"children clean?\")\r\n      }\r\n    }\r\n  }, [children])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      sliderRef.current = null\r\n      sliderGroupRef.current = null\r\n      sliderWrapperElemRef.current = null\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"slider-wrapper\" ref={sliderWrapperElemRef} style={{ height: (typeof height === \"number\" ? `${height}px` : height) || undefined }}>\r\n      <div className=\"slider\" ref={sliderRef}>\r\n        <div className=\"slider-group\" ref={sliderGroupRef}>\r\n          {children}\r\n        </div>\r\n        {mode === \"list-detail\" && (\r\n          <div className=\"pullup-tips\">\r\n            {beforePullUp && (\r\n              <div className=\"before-trigger\">\r\n                <span className=\"pullup-txt\">Pull up and load more</span>\r\n              </div>\r\n            )}\r\n            {!beforePullUp && (\r\n              <div className=\"after-trigger\">\r\n                <span className=\"pullup-txt\">Loading...</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {mode === \"banner\" && dots.length > 0 && (\r\n        <div className=\"dots\">\r\n          {dots.map((dot, index) => {\r\n            let className = currentPageIndex === index ? \"active\" : \"\"\r\n            className += \" dots-item\"\r\n            return <div key={index} className={className}></div>\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst stateToProps = (state: any) => ({})\r\n\r\nconst dispatchToProps = (dispatch: any) => ({})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(Slider)\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\playpage\\action.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\views\\Recommend\\define.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\components\\HOC\\Loading\\index.tsx",["202","203","204","205"],"import { useEffect } from \"react\"\r\nimport \"./index.less\"\r\n\r\nconst Loading = (props: any) => {\r\n  const { type } = props\r\n  const dom1 = (\r\n    <>\r\n      <div className=\"container1\">\r\n        <div className=\"circle circle1\"></div>\r\n        <div className=\"circle circle2\"></div>\r\n        <div className=\"circle circle3\"></div>\r\n        <div className=\"circle circle4\"></div>\r\n      </div>\r\n      <div className=\"container2\">\r\n        <div className=\"circle circle1\"></div>\r\n        <div className=\"circle circle2\"></div>\r\n        <div className=\"circle circle3\"></div>\r\n        <div className=\"circle circle4\"></div>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  const dom2 = (\r\n    <>\r\n      <div className=\"bounce-view\">\r\n        <div className=\"bounce bounce1\"></div>\r\n        <div className=\"bounce bounce2\"></div>\r\n        <div className=\"bounce bounce3\"></div>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  const dom3 = (\r\n    <>\r\n      <div className=\"wave\">\r\n        <div className=\"react react1\"></div>\r\n        <div className=\"react react2\"></div>\r\n        <div className=\"react react3\"></div>\r\n        <div className=\"react react4\"></div>\r\n        <div className=\"react react5\"></div>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  return <div className=\"loading\">{dom3}</div>\r\n}\r\n\r\nexport const withLoading = (WrappedComponent: any) => (props: any) => {\r\n  const { loading } = props\r\n  const tempProps = { ...props, loading: undefined }\r\n  return (\r\n    <>\r\n      {loading && <Loading></Loading>}\r\n      <WrappedComponent {...tempProps} />\r\n    </>\r\n  )\r\n}\r\n","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\audio\\action.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\detail\\reducer.ts",["206"],"import * as types from \"../types\"\r\n\r\nconst defaultState = {\r\n  id: null,\r\n  data: null,\r\n  playList: [],\r\n  page: {\r\n    size: 10,\r\n    pageNo: 0,\r\n    songsTotal: null,\r\n    pageTotal: null,\r\n    // modelForClient: [],\r\n    model: [],\r\n  },\r\n}\r\n\r\nexport default (state: any = defaultState, action: any) => {\r\n  const {type, value} = action\r\n  switch (type) {\r\n    case types.DETAIL__ID:\r\n      return {\r\n        ...state,\r\n        id: value,\r\n      }\r\n    case types.DETAIL__DATA:\r\n      return {\r\n        ...state,\r\n        data: value,\r\n      }\r\n    case types.DETAIL__PLAY_LIST:\r\n      return {\r\n        ...state,\r\n        playList: value,\r\n      }\r\n    case types.DETAIL__PAGE:\r\n      return {\r\n        ...state,\r\n        page: value,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\detail\\action.ts",[],"D:\\wangyufei\\mine\\wang-player\\react-mobile\\src\\store\\recommend\\reducer.ts",["207"],"import * as types from \"@/store/types\"\r\n\r\nconst defaultState = {\r\n  banner: [],\r\n  personalize: [],\r\n  newSongList: [],\r\n}\r\n\r\nexport default (state: any = defaultState, action: any) => {\r\n  const { type, value } = action\r\n  switch (type) {\r\n    case types.RECOMMEND__BANNER:\r\n      return {\r\n        ...state,\r\n        banner: value,\r\n      }\r\n    case types.RECOMMEND__PERSONALIZE:\r\n      return {\r\n        ...state,\r\n        personalize: value,\r\n      }\r\n    case types.RECOMMEND__NEW_SONG_LIST:\r\n      return {\r\n        ...state,\r\n        newSongList: value,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n",{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":58,"column":9,"nodeType":"214","messageId":"215","endLine":58,"endColumn":13},{"ruleId":"212","severity":1,"message":"216","line":3,"column":9,"nodeType":"214","messageId":"215","endLine":3,"endColumn":15},{"ruleId":"212","severity":1,"message":"217","line":5,"column":7,"nodeType":"214","messageId":"215","endLine":5,"endColumn":13},{"ruleId":"212","severity":1,"message":"218","line":11,"column":7,"nodeType":"214","messageId":"215","endLine":11,"endColumn":13},{"ruleId":"212","severity":1,"message":"219","line":20,"column":10,"nodeType":"214","messageId":"215","endLine":20,"endColumn":21},{"ruleId":"212","severity":1,"message":"220","line":20,"column":23,"nodeType":"214","messageId":"215","endLine":20,"endColumn":37},{"ruleId":"208","replacedBy":"221"},{"ruleId":"210","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":118,"column":6,"nodeType":"225","endLine":118,"endColumn":8,"suggestions":"226"},{"ruleId":"223","severity":1,"message":"227","line":131,"column":29,"nodeType":"225","endLine":131,"endColumn":47,"suggestions":"228"},{"ruleId":"223","severity":1,"message":"227","line":135,"column":6,"nodeType":"225","endLine":135,"endColumn":17,"suggestions":"229"},{"ruleId":"223","severity":1,"message":"230","line":39,"column":6,"nodeType":"225","endLine":39,"endColumn":11,"suggestions":"231"},{"ruleId":"212","severity":1,"message":"232","line":46,"column":7,"nodeType":"214","messageId":"215","endLine":46,"endColumn":21},{"ruleId":"223","severity":1,"message":"233","line":52,"column":11,"nodeType":"234","endLine":52,"endColumn":26},{"ruleId":"223","severity":1,"message":"235","line":43,"column":6,"nodeType":"225","endLine":43,"endColumn":8,"suggestions":"236"},{"ruleId":"223","severity":1,"message":"237","line":100,"column":6,"nodeType":"225","endLine":100,"endColumn":15,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","endLine":5,"endColumn":2},{"ruleId":"212","severity":1,"message":"242","line":19,"column":76,"nodeType":"214","messageId":"215","endLine":19,"endColumn":87},{"ruleId":"223","severity":1,"message":"243","line":81,"column":6,"nodeType":"225","endLine":81,"endColumn":8,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":90,"column":22,"nodeType":"247","endLine":90,"endColumn":133},{"ruleId":"212","severity":1,"message":"248","line":8,"column":10,"nodeType":"214","messageId":"215","endLine":8,"endColumn":21},{"ruleId":"212","severity":1,"message":"249","line":22,"column":10,"nodeType":"214","messageId":"215","endLine":22,"endColumn":17},{"ruleId":"212","severity":1,"message":"250","line":28,"column":10,"nodeType":"214","messageId":"215","endLine":28,"endColumn":22},{"ruleId":"212","severity":1,"message":"251","line":54,"column":9,"nodeType":"214","messageId":"215","endLine":54,"endColumn":18},{"ruleId":"223","severity":1,"message":"252","line":105,"column":6,"nodeType":"225","endLine":105,"endColumn":8,"suggestions":"253"},{"ruleId":"239","severity":1,"message":"254","line":10,"column":1,"nodeType":"241","endLine":41,"endColumn":2},{"ruleId":"239","severity":1,"message":"254","line":8,"column":1,"nodeType":"241","endLine":24,"endColumn":2},{"ruleId":"239","severity":1,"message":"254","line":11,"column":1,"nodeType":"241","endLine":32,"endColumn":2},{"ruleId":"239","severity":1,"message":"254","line":17,"column":1,"nodeType":"241","endLine":58,"endColumn":2},{"ruleId":"212","severity":1,"message":"255","line":1,"column":11,"nodeType":"214","messageId":"215","endLine":1,"endColumn":20},{"ruleId":"223","severity":1,"message":"256","line":44,"column":6,"nodeType":"225","endLine":44,"endColumn":8,"suggestions":"257"},{"ruleId":"212","severity":1,"message":"250","line":19,"column":10,"nodeType":"214","messageId":"215","endLine":19,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":23,"column":11,"nodeType":"260","messageId":"261","endLine":23,"endColumn":17},{"ruleId":"212","severity":1,"message":"262","line":89,"column":16,"nodeType":"214","messageId":"215","endLine":89,"endColumn":21},{"ruleId":"212","severity":1,"message":"263","line":89,"column":23,"nodeType":"214","messageId":"215","endLine":89,"endColumn":35},{"ruleId":"212","severity":1,"message":"264","line":89,"column":37,"nodeType":"214","messageId":"215","endLine":89,"endColumn":47},{"ruleId":"212","severity":1,"message":"263","line":113,"column":23,"nodeType":"214","messageId":"215","endLine":113,"endColumn":35},{"ruleId":"212","severity":1,"message":"264","line":113,"column":37,"nodeType":"214","messageId":"215","endLine":113,"endColumn":47},{"ruleId":"223","severity":1,"message":"265","line":110,"column":6,"nodeType":"225","endLine":110,"endColumn":16,"suggestions":"266"},{"ruleId":"212","severity":1,"message":"255","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":19},{"ruleId":"212","severity":1,"message":"267","line":5,"column":11,"nodeType":"214","messageId":"215","endLine":5,"endColumn":15},{"ruleId":"212","severity":1,"message":"268","line":6,"column":9,"nodeType":"214","messageId":"215","endLine":6,"endColumn":13},{"ruleId":"212","severity":1,"message":"269","line":23,"column":9,"nodeType":"214","messageId":"215","endLine":23,"endColumn":13},{"ruleId":"239","severity":1,"message":"254","line":17,"column":1,"nodeType":"241","endLine":43,"endColumn":2},{"ruleId":"239","severity":1,"message":"254","line":9,"column":1,"nodeType":"241","endLine":30,"endColumn":2},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"@typescript-eslint/no-unused-vars","'fun1' is assigned a value but never used.","Identifier","unusedVar","'TabBar' is defined but never used.","'Route1' is assigned a value but never used.","'Route2' is assigned a value but never used.","'selectedTab' is assigned a value but never used.","'setSelectedTab' is assigned a value but never used.",["270"],["271"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'EventEmitter', 'fetchLyricData', 'lyric.lyricList.length', 'onTimeupdate', and 'songId'. Either include them or remove the dependency array.","ArrayExpression",["272"],"React Hook useEffect has a missing dependency: 'scroll'. Either include it or remove the dependency array.",["273"],["274"],"React Hook useEffect has missing dependencies: 'callback' and 'immediate'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["275"],"'useRefCallback' is assigned a value but never used.","React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","React Hook useEffect has a missing dependency: 'setInstance'. Either include it or remove the dependency array.",["276"],"React Hook useEffect has missing dependencies: 'barWidth' and 'touch.initiated'. Either include them or remove the dependency array.",["277"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setDetailId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bannerArr.length', 'newSongList.length', 'personalize.length', 'setBannerArr', 'setNewSongList', and 'setPersonalize'. Either include them or remove the dependency array.",["278"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'withLoading' is defined but never used.","'loading' is assigned a value but never used.","'beforePullUp' is assigned a value but never used.","'pullingUp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["279"],"Assign arrow function to a variable before exporting as module default","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchMusicComment'. Either include it or remove the dependency array.",["280"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'index' is assigned a value but never used.","'onTouchStart' is assigned a value but never used.","'onTouchEnd' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initial', 'mode', and 'setSliderWidth'. Either include them or remove the dependency array.",["281"],"'type' is assigned a value but never used.","'dom1' is assigned a value but never used.","'dom2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [EventEmitter, fetchLyricData, lyric.lyricList.length, onTimeupdate, songId]",{"range":"302","text":"303"},"Update the dependencies array to be: [currentLyricLine, scroll]",{"range":"304","text":"305"},"Update the dependencies array to be: [scroll, showLyric]",{"range":"306","text":"307"},"Update the dependencies array to be: [callback, dep, immediate]",{"range":"308","text":"309"},"Update the dependencies array to be: [setInstance]",{"range":"310","text":"311"},"Update the dependencies array to be: [barWidth, percent, touch.initiated]",{"range":"312","text":"313"},"Update the dependencies array to be: [bannerArr.length, newSongList.length, personalize.length, setBannerArr, setNewSongList, setPersonalize]",{"range":"314","text":"315"},"Update the dependencies array to be: [init]",{"range":"316","text":"317"},"Update the dependencies array to be: [fetchMusicComment]",{"range":"318","text":"319"},"Update the dependencies array to be: [children, initial, mode, setSliderWidth]",{"range":"320","text":"321"},[3420,3422],"[EventEmitter, fetchLyricData, lyric.lyricList.length, onTimeupdate, songId]",[3697,3715],"[currentLyricLine, scroll]",[3775,3786],"[scroll, showLyric]",[857,862],"[callback, dep, immediate]",[1440,1442],"[setInstance]",[3050,3059],"[barWidth, percent, touch.initiated]",[2524,2526],"[bannerArr.length, newSongList.length, personalize.length, setBannerArr, setNewSongList, setPersonalize]",[3028,3030],"[init]",[1249,1251],"[fetchMusicComment]",[3765,3775],"[children, initial, mode, setSliderWidth]"]